name: Notify on OpenAPI Schema Changes

on:
  pull_request:
    types: [opened, synchronize]
    branches: [master]

jobs:
  detect-and-notify:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      actions: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Find changed schema files
        id: schema_changes
        run: |
          git fetch origin master
          CHANGED=$(git diff --name-only origin/master...HEAD specification/schemas/)
          echo "changed_files<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGED" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Comment on PR or linked Issue if schemas changed
        if: steps.schema_changes.outputs.changed_files != ''
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = context.payload.pull_request;
            const body = pr.body || "";

            // Try both "Owner/Repo#123" and full "https://github.com/Owner/Repo/issues/123"
            const urlRegex   = /https:\/\/github\.com\/([^\/]+)\/([^\/]+)\/issues\/(\d+)/;
            const shortRegex = /([A-Za-z0-9_.-]+)\/([A-Za-z0-9_.-]+)#(\d+)/;

            let match = body.match(urlRegex) || body.match(shortRegex);
            let targetOwner, targetRepo, targetNumber;

            if (match) {
              // In both cases, groups 1=owner, 2=repo, 3=number
              [, targetOwner, targetRepo, targetNumber] = match;
              targetNumber = parseInt(targetNumber, 10);
            } else {
              // No external issue reference â†’ comment on this PR
              targetOwner  = context.repo.owner;
              targetRepo   = context.repo.repo;
              targetNumber = pr.number;
            }

            await github.rest.issues.createComment({
              owner:        targetOwner,
              repo:         targetRepo,
              issue_number: targetNumber,
              body: "ðŸ”” OpenAPI schema has changed. Please bring Mobile team up to speed on the same."
            });
        

      # - name: Create issue in Woosmap/woosmap if schemas changed
      #   if: steps.schema_changes.outputs.changed_files != ''
      #   uses: actions/github-script@v6
      #   with:
      #     github-token: ${{ secrets.WOOSMAP_GH_ACCESS_TOKEN }}
      #     script: |
      #       const pr = context.payload.pull_request;
      #       const issueTitle = `OpenAPI schema changed in PR #${pr.number}`;
      
      #       // 1) List up to 100 open issues in the private repo
      #       const { data: openIssues } = await github.rest.issues.listForRepo({
      #         owner: 'Woosmap',
      #         repo: 'woosmap',
      #         state: 'open',
      #         per_page: 100
      #       });
      
      #       // 2) Skip creation if one already matches the title
      #       if (openIssues.some(issue => issue.title === issueTitle)) {
      #         console.log(`Issue "${issueTitle}" already exists; skipping.`);
      #       } else {
      #         // 3) Otherwise create it
      #         await github.rest.issues.create({
      #           owner: 'Woosmap',
      #           repo: 'woosmap',
      #           title: issueTitle,
      #           body: [
      #             `Schema files under \`specification/schemas/\` were updated in PR #${pr.number}.`,
      #             ``,
      #             `> ${pr.title}`,
      #             ``,
      #             `Review here: ${pr.html_url}`
      #           ].join('\n'),
      #           assignees: ['strider1981','sameerdhulap']
      #         });
      #       }
          
                
      - name: Send Slack notification if schemas changed
        if: steps.schema_changes.outputs.changed_files != ''
        uses: slackapi/slack-github-action@v1
        with:
          payload: |
            {
              "channel": "#mobile",
              "text": "ðŸš¨ OpenAPI schema has changed. Please refer to the PR <${{ github.event.pull_request.html_url }}|#${{ github.event.pull_request.number }}> for more insights."
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.WOOSMAP_SLACK_WEBHOOK }}