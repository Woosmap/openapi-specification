name: Notify on OpenAPI Schema Changes

on:
  pull_request:
    types: [opened, synchronize]
    branches: [master]

jobs:
  detect-and-notify:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      actions: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Find changed schema files
        id: schema_changes
        run: |
          git fetch origin master
          CHANGED=$(git diff --name-only origin/master...HEAD specification/schemas/)
          echo "changed_files<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGED" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Comment on PR if schemas changed
        if: steps.schema_changes.outputs.changed_files != ''
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = context.payload.pull_request;
            await github.rest.issues.createComment({
              ...context.repo,
              issue_number: pr.number,
              body: "ðŸ”” OpenAPI schema has changed. Please bring Mobile team up to speed on the same."
            });

      - name: Create issue in Woosmap/woosmap if schemas changed
        if: steps.schema_changes.outputs.changed_files != ''
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.WOOSMAP_GH_ACCESS_TOKEN }}
          script: |
            const { owner, repo, number, html_url, title: prTitle } = context.payload.pull_request;
            const issueTitle = `OpenAPI schema changed in PR #${number}`;
            // 1) Search for existing open issues with the same title
            const search = await github.rest.search.issuesAndPullRequests({
                q: `repo:Woosmap/woosmap is:issue is:open in:title "${issueTitle}"`
            });
            if (search.data.total_count === 0) {
                // 2) No duplicate found â†’ create it
                await github.rest.issues.create({
                owner: 'Woosmap',
                repo: 'woosmap',
                title: issueTitle,
                body: [
                    `Schema files under \`specification/schemas/\` were updated in PR #${number}.`,
                    ``,
                    `> ${prTitle}`,
                    ``,
                    `Review it here: ${html_url}`
                ].join('\n'),
                assignees: ['strider1981','sameerdhulap']
                });
            } else {
                console.log(`An open issue titled "${issueTitle}" already exists; skipping creation.`);
            }
                
      - name: Send Slack notification if schemas changed
        if: steps.schema_changes.outputs.changed_files != ''
        uses: slackapi/slack-github-action@v1
        with:
          payload: |
            {
              "channel": "#mobile",
              "text": "ðŸš¨ OpenAPI schema has changed. Please refer to the PR <${{ github.event.pull_request.html_url }}|#${{ github.event.pull_request.number }}> for more insights."
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.WOOSMAP_SLACK_WEBHOOK }}
