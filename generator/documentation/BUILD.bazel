load("@aspect_rules_js//js:defs.bzl", "js_binary", "js_run_binary")
load("//tools:ts_wrapper.bzl", "ts_project")

package(default_visibility = ["//visibility:public"])

ts_project(
    name = "_lib",
    srcs = glob(["*.ts"]),
    tsconfig = "//:tsconfig",
    deps = [
        "//:node_modules/@apidevtools/json-schema-ref-parser",
        "//:node_modules/@types/json-schema",
        "//:node_modules/@types/node",
        "//:node_modules/@types/unist",
        "//:node_modules/@types/yargs",
        "//:node_modules/clsx",
        "//:node_modules/mdast-builder",
        "//:node_modules/mdast-util-from-markdown",
        "//:node_modules/mdast-util-gfm",
        "//:node_modules/micromark-extension-gfm",
        "//:node_modules/openapi-types",
        "//:node_modules/prettier",
        "//:node_modules/remark-gfm",
        "//:node_modules/remark-html",
        "//:node_modules/remark-parse",
        "//:node_modules/remark-stringify",
        "//:node_modules/slugify",
        "//:node_modules/tar-stream",
        "//:node_modules/unified",
        "//:node_modules/yargs",
    ],
)

js_binary(
    name = "_schema_bin",
    data = [
        ":_lib",
        "//specification:index_yml",
        "//specification:openapi3",
    ],
    entry_point = ":schema.js",
    node_options = [
        "--experimental-modules",
        "--es-module-specifier-resolution=node",
    ],
)

js_run_binary(
    name = "schemas",
    srcs = [
        ":_schema_bin",
        "//:woosmap-openapi3.json",
    ],
    outs = ["schemas.tar"],
    args = [
        "--spec",
        "$(rootpath //:woosmap-openapi3.json)",
        "--output",
        "$(rootpath schemas.tar)",
    ],
    tool = ":_schema_bin",  # add the tool argument
)

js_binary(
    name = "_parameters_bin",
    data = [
        ":_lib",
        "//specification:index_yml",
        "//specification:openapi3",
    ],
    entry_point = ":parameters.js",
    node_options = [
        "--experimental-modules",
        "--es-module-specifier-resolution=node",
    ],
)

js_run_binary(
    name = "parameters",
    srcs = [
        ":_parameters_bin",
        "//:woosmap-openapi3.json",
    ],
    outs = ["parameters.tar"],
    args = [
        "--spec",
        "$(rootpath //:woosmap-openapi3.json)",
        "--output",
        "$(rootpath parameters.tar)",
    ],
    tool = ":_parameters_bin",
)

js_binary(
    name = "schema-dependencies-helper",
    args = [
        "--spec",
        "$(rootpath //:woosmap-openapi3.json)",
    ],
    data = [
        ":_lib",
        "//:woosmap-openapi3.json",
    ],
    entry_point = ":schema-dependencies-helper.js",
    node_options = [
        "--experimental-modules",
        "--es-module-specifier-resolution=node",
    ],
)
