{
    "item": [
        {
            "id": "3395f76b-fc21-4c1b-81e4-09999cb98b7f",
            "name": "Store Search API",
            "description": {
                "content": "Stores Search API lets you query the Assets which are returned as a [GeoJson](https://geojson.org/). Request is done over HTTPS using GET. You must specify a key in your request, included as the value of a `key` parameter for your public key or `private_key` for your private key. This key identifies your application for purposes of quota management. Learn how to [get a key](https://developers.woosmap.com/support/api-keys/). If your request returns a high number of assets, the result will be paginated. If so, you can request assets by page using `page` and `stores_by_page` parameters (Default is **100**, max is **300**).\n",
                "type": "text/plain"
            },
            "item": [
                {
                    "id": "f010b6b4-fc85-4f4c-8917-f6f63fe52f01",
                    "name": "Search for assets",
                    "request": {
                        "name": "Search for assets",
                        "description": {
                            "content": "Used to retrieve assets from query\n",
                            "type": "text/plain"
                        },
                        "url": {
                            "protocol": "https",
                            "path": [
                                "stores",
                                "search"
                            ],
                            "host": [
                                "api",
                                "woosmap",
                                "com"
                            ],
                            "query": [
                                {
                                    "disabled": true,
                                    "key": "query",
                                    "value": "<string>",
                                    "description": "Search query combining one or more search clauses. Each search clause is made up of three parts structured as `field` `:` `operator` `value`. , e.g. `name:=\"My cool store\"`\n### Vocabulary\n- **Field**: attribute of the Store that is searched, e.g. the attribute `name` of the store.\n- **Operator**: test that is performed on the data to provide a match, e.g. `=`. Each field has a default operator. If none operator follow the `:`, the default one is used.\n- **Value**: the content of the attribute that is tested, e.g. the name of the store `\"My cool store\"`.\nCombine clauses with the conjunctions `AND` or `OR`, and negate the query with `NOT`.\n### Fields\n- `type`: An element is contained within `type` collection. e.g. `type:\"myType\"`\n- `tag`: An element is contained within `tag` collection. e.g. `tag:\"myTag\"`\n- `city`: text matching: the value match the `city` field. e.g. `city:=\"Paris\"`\n- `country`: text matching: the value match the `countryCode` field. e.g. `country:=\"FR\"`\n- `name`: text matching: the value match the `name` field. e.g. `name:=\"myName\"`\n- `idstore`: text matching: the value match the `idstore` field.  e.g. `idstore:=\"myIdStore\"`\n- `user`: concerns all fields inside `user_properties`. text matching or numerical comparison.  e.g. `user.myAttribute:=\"myValue\"`\n- `localized`: used for [localizedNames](https://developers.woosmap.com/products/data-api/data-structure/#localizednames) to search in native language. text matching in collection: the value match one of the the `localizedNames`. e.g. `localized:=\"centro\"`\n\n> **userProperties** field has no restriction regarding the data you can put in it (Arrays, Object, Boolean, String, Numeric...) but you can only query for **text matching or numerical comparison**.\n### Operators\n- `:` : Default and mandatory operator. For `type` and `tag` fields, define that an element is contained within a collection.\n- `=` : The content of a string or a number is equal to the other.\n- `>` : A number is greater than another.\n- `<` : A number is smaller than another.\n- `>=` : A number is greater than or equal to another.\n- `<=` : A number is smaller than or equal to another.\n- `AND` : Return assets that match both clauses.\n- `OR` : Return assets that match either clauses.\n- `NOT` : Negates a search clause.\nFor compound clauses, you can use parentheses to group clauses together. For example: ```(type:\"type1\" OR type:\"type2\") AND tag:\"hockey\"```\nYou can use `NOT` operator to negates a search clause. For example: ```not type:\"type1\"```\n"
                                }
                            ],
                            "variable": []
                        },
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "key"
                                },
                                {
                                    "key": "value",
                                    "value": "<API Key>"
                                },
                                {
                                    "key": "in",
                                    "value": "query"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "19e74d07-1c04-4996-a84c-032924af7cd9",
                            "name": "200 OK",
                            "originalRequest": {
                                "url": {
                                    "protocol": "https",
                                    "path": [
                                        "stores",
                                        "search"
                                    ],
                                    "host": [
                                        "api",
                                        "woosmap",
                                        "com"
                                    ],
                                    "query": [
                                        {
                                            "key": "query",
                                            "value": "name:'My cool store'|type:'click_and_collect'"
                                        },
                                        {
                                            "key": "key",
                                            "value": "<API Key>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"type\": \"FeatureCollection\",\n \"features\": [\n  {\n   \"type\": \"Feature\",\n   \"properties\": {\n    \"store_id\": \"boroughmarket\",\n    \"name\": \"Borough Market\",\n    \"contact\": {\n     \"phone\": \"020 7407 1002\",\n     \"website\": \"http://boroughmarket.org.uk\"\n    },\n    \"address\": {\n     \"lines\": [\n      \"8 Southwark St\"\n     ],\n     \"country_code\": null,\n     \"city\": \"London\",\n     \"zipcode\": \"SE1 1TL\"\n    },\n    \"user_properties\": {\n     \"photo\": \"https://preview.webgeoservices.com/jsfiddle/boroughmarket.jpeg\",\n     \"placeId\": \"ChIJD2bPdVcDdkgRiDyO6mrCsu4\"\n    },\n    \"tags\": [],\n    \"types\": [\n     \"covered\"\n    ],\n    \"open\": {\n     \"open_now\": true,\n     \"open_hours\": [\n      {\n       \"end\": \"17:00\",\n       \"start\": \"10:00\"\n      }\n     ],\n     \"week_day\": 1,\n     \"current_slice\": {\n      \"end\": \"17:00\",\n      \"start\": \"10:00\"\n     }\n    },\n    \"weekly_opening\": {\n     \"1\": {\n      \"hours\": [\n       {\n        \"end\": \"17:00\",\n        \"start\": \"10:00\"\n       }\n      ],\n      \"isSpecial\": false\n     },\n     \"2\": {\n      \"hours\": [\n       {\n        \"end\": \"17:00\",\n        \"start\": \"10:00\"\n       }\n      ],\n      \"isSpecial\": false\n     },\n     \"3\": {\n      \"hours\": [\n       {\n        \"end\": \"17:00\",\n        \"start\": \"10:00\"\n       }\n      ],\n      \"isSpecial\": false\n     },\n     \"4\": {\n      \"hours\": [\n       {\n        \"end\": \"17:00\",\n        \"start\": \"10:00\"\n       }\n      ],\n      \"isSpecial\": false\n     },\n     \"5\": {\n      \"hours\": [\n       {\n        \"end\": \"18:00\",\n        \"start\": \"10:00\"\n       }\n      ],\n      \"isSpecial\": false\n     },\n     \"6\": {\n      \"hours\": [\n       {\n        \"end\": \"17:00\",\n        \"start\": \"10:00\"\n       }\n      ],\n      \"isSpecial\": false\n     },\n     \"7\": {\n      \"hours\": [],\n      \"isSpecial\": false\n     },\n     \"timezone\": \"Europe/London\"\n    },\n    \"opening_hours\": {\n     \"usual\": {\n      \"5\": [\n       {\n        \"end\": \"18:00\",\n        \"start\": \"10:00\"\n       }\n      ],\n      \"7\": [],\n      \"default\": [\n       {\n        \"end\": \"17:00\",\n        \"start\": \"10:00\"\n       }\n      ]\n     },\n     \"timezone\": \"Europe/London\"\n    }\n   },\n   \"geometry\": {\n    \"type\": \"Point\",\n    \"coordinates\": [\n     -0.090679,\n     51.505046\n    ]\n   }\n  },\n  {\n   \"type\": \"Feature\",\n   \"properties\": {\n    \"store_id\": \"courssaleya\",\n    \"name\": \"Cours Saleya\",\n    \"contact\": {\n     \"phone\": \"04 92 14 46 14\",\n     \"website\": \"http://leblogduvieuxnice.nicematin.com/.services/blog/6a0120a864ed46970b0162fd89fc17970d/search?filter.q=marché\"\n    },\n    \"address\": {\n     \"lines\": [\n      \"Place Charles Félix\"\n     ],\n     \"country_code\": null,\n     \"city\": \"Nice\",\n     \"zipcode\": \"06300\"\n    },\n    \"user_properties\": {\n     \"photo\": \"https://preview.webgeoservices.com/jsfiddle/courssaleya.jpeg\",\n     \"placeId\": \"ChIJw3OrJKPazRIR6WPu_P9ByG4\"\n    },\n    \"tags\": [],\n    \"types\": [\n     \"covered\"\n    ],\n    \"open\": {\n     \"open_now\": false,\n     \"open_hours\": [],\n     \"week_day\": 1,\n     \"next_opening\": {\n      \"end\": \"17:30\",\n      \"start\": \"06:00\",\n      \"day\": \"2021-11-16\"\n     }\n    },\n    \"weekly_opening\": {\n     \"1\": {\n      \"hours\": [],\n      \"isSpecial\": false\n     },\n     \"2\": {\n      \"hours\": [\n       {\n        \"end\": \"17:30\",\n        \"start\": \"06:00\"\n       }\n      ],\n      \"isSpecial\": false\n     },\n     \"3\": {\n      \"hours\": [\n       {\n        \"end\": \"17:30\",\n        \"start\": \"06:00\"\n       }\n      ],\n      \"isSpecial\": false\n     },\n     \"4\": {\n      \"hours\": [\n       {\n        \"end\": \"17:30\",\n        \"start\": \"06:00\"\n       }\n      ],\n      \"isSpecial\": false\n     },\n     \"5\": {\n      \"hours\": [\n       {\n        \"end\": \"17:30\",\n        \"start\": \"06:00\"\n       }\n      ],\n      \"isSpecial\": false\n     },\n     \"6\": {\n      \"hours\": [\n       {\n        \"end\": \"17:30\",\n        \"start\": \"06:00\"\n       }\n      ],\n      \"isSpecial\": false\n     },\n     \"7\": {\n      \"hours\": [\n       {\n        \"end\": \"13:30\",\n        \"start\": \"06:00\"\n       }\n      ],\n      \"isSpecial\": false\n     },\n     \"timezone\": \"Europe/Paris\"\n    },\n    \"opening_hours\": {\n     \"usual\": {\n      \"1\": [],\n      \"7\": [\n       {\n        \"end\": \"13:30\",\n        \"start\": \"06:00\"\n       }\n      ],\n      \"default\": [\n       {\n        \"end\": \"17:30\",\n        \"start\": \"06:00\"\n       }\n      ]\n     },\n     \"timezone\": \"Europe/Paris\"\n    }\n   },\n   \"geometry\": {\n    \"type\": \"Point\",\n    \"coordinates\": [\n     7.275492,\n     43.69553\n    ]\n   }\n  }\n ],\n \"pagination\": {\n  \"page\": 1,\n  \"pageCount\": 1\n }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "ed937e64-396d-46fa-bf9b-e10a4ad53da1",
                            "name": "401 UNAUTHORIZED",
                            "originalRequest": {
                                "url": {
                                    "protocol": "https",
                                    "path": [
                                        "stores",
                                        "search"
                                    ],
                                    "host": [
                                        "api",
                                        "woosmap",
                                        "com"
                                    ],
                                    "query": [
                                        {
                                            "key": "query",
                                            "value": "name:'My cool store'|type:'click_and_collect'"
                                        },
                                        {
                                            "key": "key",
                                            "value": "<API Key>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"detail\": \"Incorrect authentication credentials. Please check or use a valid API Key\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "ecfbd198-469b-472a-a6ab-ed1387ee4486",
                    "name": "Autocomplete for assets",
                    "request": {
                        "name": "Autocomplete for assets",
                        "description": {
                            "content": "Autocomplete on `localizedNames` with highlighted results on asset name. Use the field `localized` in your query parameter to search for localized names.\n",
                            "type": "text/plain"
                        },
                        "url": {
                            "protocol": "https",
                            "path": [
                                "stores",
                                "autocomplete"
                            ],
                            "host": [
                                "api",
                                "woosmap",
                                "com"
                            ],
                            "query": [
                                {
                                    "disabled": true,
                                    "key": "query",
                                    "value": "<string>",
                                    "description": "Search query combining one or more search clauses. Each search clause is made up of three parts structured as `field` `:` `operator` `value`. , e.g. `name:=\"My cool store\"`\n### Vocabulary\n- **Field**: attribute of the Store that is searched, e.g. the attribute `name` of the store.\n- **Operator**: test that is performed on the data to provide a match, e.g. `=`. Each field has a default operator. If none operator follow the `:`, the default one is used.\n- **Value**: the content of the attribute that is tested, e.g. the name of the store `\"My cool store\"`.\nCombine clauses with the conjunctions `AND` or `OR`, and negate the query with `NOT`.\n### Fields\n- `type`: An element is contained within `type` collection. e.g. `type:\"myType\"`\n- `tag`: An element is contained within `tag` collection. e.g. `tag:\"myTag\"`\n- `city`: text matching: the value match the `city` field. e.g. `city:=\"Paris\"`\n- `country`: text matching: the value match the `countryCode` field. e.g. `country:=\"FR\"`\n- `name`: text matching: the value match the `name` field. e.g. `name:=\"myName\"`\n- `idstore`: text matching: the value match the `idstore` field.  e.g. `idstore:=\"myIdStore\"`\n- `user`: concerns all fields inside `user_properties`. text matching or numerical comparison.  e.g. `user.myAttribute:=\"myValue\"`\n- `localized`: used for [localizedNames](https://developers.woosmap.com/products/data-api/data-structure/#localizednames) to search in native language. text matching in collection: the value match one of the the `localizedNames`. e.g. `localized:=\"centro\"`\n\n> **userProperties** field has no restriction regarding the data you can put in it (Arrays, Object, Boolean, String, Numeric...) but you can only query for **text matching or numerical comparison**.\n### Operators\n- `:` : Default and mandatory operator. For `type` and `tag` fields, define that an element is contained within a collection.\n- `=` : The content of a string or a number is equal to the other.\n- `>` : A number is greater than another.\n- `<` : A number is smaller than another.\n- `>=` : A number is greater than or equal to another.\n- `<=` : A number is smaller than or equal to another.\n- `AND` : Return assets that match both clauses.\n- `OR` : Return assets that match either clauses.\n- `NOT` : Negates a search clause.\nFor compound clauses, you can use parentheses to group clauses together. For example: ```(type:\"type1\" OR type:\"type2\") AND tag:\"hockey\"```\nYou can use `NOT` operator to negates a search clause. For example: ```not type:\"type1\"```\n"
                                }
                            ],
                            "variable": []
                        },
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "key"
                                },
                                {
                                    "key": "value",
                                    "value": "<API Key>"
                                },
                                {
                                    "key": "in",
                                    "value": "query"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "2c422213-b087-4a4b-b7aa-989bfeeee4f1",
                            "name": "200 OK",
                            "originalRequest": {
                                "url": {
                                    "protocol": "https",
                                    "path": [
                                        "stores",
                                        "autocomplete"
                                    ],
                                    "host": [
                                        "api",
                                        "woosmap",
                                        "com"
                                    ],
                                    "query": [
                                        {
                                            "key": "query",
                                            "value": "name:'My cool store'|type:'click_and_collect'"
                                        },
                                        {
                                            "key": "key",
                                            "value": "<API Key>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"type\": \"FeatureCollection\",\n \"features\": [\n  {\n   \"type\": \"Feature\",\n   \"properties\": {\n    \"store_id\": \"boroughmarket\",\n    \"name\": \"Borough Market\",\n    \"contact\": {\n     \"phone\": \"020 7407 1002\",\n     \"website\": \"http://boroughmarket.org.uk\"\n    },\n    \"address\": {\n     \"lines\": [\n      \"8 Southwark St\"\n     ],\n     \"country_code\": null,\n     \"city\": \"London\",\n     \"zipcode\": \"SE1 1TL\"\n    },\n    \"user_properties\": {\n     \"photo\": \"https://preview.webgeoservices.com/jsfiddle/boroughmarket.jpeg\",\n     \"placeId\": \"ChIJD2bPdVcDdkgRiDyO6mrCsu4\"\n    },\n    \"tags\": [],\n    \"types\": [\n     \"covered\"\n    ],\n    \"open\": {\n     \"open_now\": true,\n     \"open_hours\": [\n      {\n       \"end\": \"17:00\",\n       \"start\": \"10:00\"\n      }\n     ],\n     \"week_day\": 1,\n     \"current_slice\": {\n      \"end\": \"17:00\",\n      \"start\": \"10:00\"\n     }\n    },\n    \"weekly_opening\": {\n     \"1\": {\n      \"hours\": [\n       {\n        \"end\": \"17:00\",\n        \"start\": \"10:00\"\n       }\n      ],\n      \"isSpecial\": false\n     },\n     \"2\": {\n      \"hours\": [\n       {\n        \"end\": \"17:00\",\n        \"start\": \"10:00\"\n       }\n      ],\n      \"isSpecial\": false\n     },\n     \"3\": {\n      \"hours\": [\n       {\n        \"end\": \"17:00\",\n        \"start\": \"10:00\"\n       }\n      ],\n      \"isSpecial\": false\n     },\n     \"4\": {\n      \"hours\": [\n       {\n        \"end\": \"17:00\",\n        \"start\": \"10:00\"\n       }\n      ],\n      \"isSpecial\": false\n     },\n     \"5\": {\n      \"hours\": [\n       {\n        \"end\": \"18:00\",\n        \"start\": \"10:00\"\n       }\n      ],\n      \"isSpecial\": false\n     },\n     \"6\": {\n      \"hours\": [\n       {\n        \"end\": \"17:00\",\n        \"start\": \"10:00\"\n       }\n      ],\n      \"isSpecial\": false\n     },\n     \"7\": {\n      \"hours\": [],\n      \"isSpecial\": false\n     },\n     \"timezone\": \"Europe/London\"\n    },\n    \"opening_hours\": {\n     \"usual\": {\n      \"5\": [\n       {\n        \"end\": \"18:00\",\n        \"start\": \"10:00\"\n       }\n      ],\n      \"7\": [],\n      \"default\": [\n       {\n        \"end\": \"17:00\",\n        \"start\": \"10:00\"\n       }\n      ]\n     },\n     \"timezone\": \"Europe/London\"\n    }\n   },\n   \"geometry\": {\n    \"type\": \"Point\",\n    \"coordinates\": [\n     -0.090679,\n     51.505046\n    ]\n   }\n  },\n  {\n   \"type\": \"Feature\",\n   \"properties\": {\n    \"store_id\": \"courssaleya\",\n    \"name\": \"Cours Saleya\",\n    \"contact\": {\n     \"phone\": \"04 92 14 46 14\",\n     \"website\": \"http://leblogduvieuxnice.nicematin.com/.services/blog/6a0120a864ed46970b0162fd89fc17970d/search?filter.q=marché\"\n    },\n    \"address\": {\n     \"lines\": [\n      \"Place Charles Félix\"\n     ],\n     \"country_code\": null,\n     \"city\": \"Nice\",\n     \"zipcode\": \"06300\"\n    },\n    \"user_properties\": {\n     \"photo\": \"https://preview.webgeoservices.com/jsfiddle/courssaleya.jpeg\",\n     \"placeId\": \"ChIJw3OrJKPazRIR6WPu_P9ByG4\"\n    },\n    \"tags\": [],\n    \"types\": [\n     \"covered\"\n    ],\n    \"open\": {\n     \"open_now\": false,\n     \"open_hours\": [],\n     \"week_day\": 1,\n     \"next_opening\": {\n      \"end\": \"17:30\",\n      \"start\": \"06:00\",\n      \"day\": \"2021-11-16\"\n     }\n    },\n    \"weekly_opening\": {\n     \"1\": {\n      \"hours\": [],\n      \"isSpecial\": false\n     },\n     \"2\": {\n      \"hours\": [\n       {\n        \"end\": \"17:30\",\n        \"start\": \"06:00\"\n       }\n      ],\n      \"isSpecial\": false\n     },\n     \"3\": {\n      \"hours\": [\n       {\n        \"end\": \"17:30\",\n        \"start\": \"06:00\"\n       }\n      ],\n      \"isSpecial\": false\n     },\n     \"4\": {\n      \"hours\": [\n       {\n        \"end\": \"17:30\",\n        \"start\": \"06:00\"\n       }\n      ],\n      \"isSpecial\": false\n     },\n     \"5\": {\n      \"hours\": [\n       {\n        \"end\": \"17:30\",\n        \"start\": \"06:00\"\n       }\n      ],\n      \"isSpecial\": false\n     },\n     \"6\": {\n      \"hours\": [\n       {\n        \"end\": \"17:30\",\n        \"start\": \"06:00\"\n       }\n      ],\n      \"isSpecial\": false\n     },\n     \"7\": {\n      \"hours\": [\n       {\n        \"end\": \"13:30\",\n        \"start\": \"06:00\"\n       }\n      ],\n      \"isSpecial\": false\n     },\n     \"timezone\": \"Europe/Paris\"\n    },\n    \"opening_hours\": {\n     \"usual\": {\n      \"1\": [],\n      \"7\": [\n       {\n        \"end\": \"13:30\",\n        \"start\": \"06:00\"\n       }\n      ],\n      \"default\": [\n       {\n        \"end\": \"17:30\",\n        \"start\": \"06:00\"\n       }\n      ]\n     },\n     \"timezone\": \"Europe/Paris\"\n    }\n   },\n   \"geometry\": {\n    \"type\": \"Point\",\n    \"coordinates\": [\n     7.275492,\n     43.69553\n    ]\n   }\n  }\n ],\n \"pagination\": {\n  \"page\": 1,\n  \"pageCount\": 1\n }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "d5bfedb2-8b05-4de1-90fa-8b9063bebebe",
                            "name": "401 UNAUTHORIZED",
                            "originalRequest": {
                                "url": {
                                    "protocol": "https",
                                    "path": [
                                        "stores",
                                        "autocomplete"
                                    ],
                                    "host": [
                                        "api",
                                        "woosmap",
                                        "com"
                                    ],
                                    "query": [
                                        {
                                            "key": "query",
                                            "value": "name:'My cool store'|type:'click_and_collect'"
                                        },
                                        {
                                            "key": "key",
                                            "value": "<API Key>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"detail\": \"Incorrect authentication credentials. Please check or use a valid API Key\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "e7ec8e20-0b62-46c9-9a61-baf390026410",
            "name": "Data Management API",
            "description": {
                "content": "The Data Management API is a web service that uses an HTTP request to manage, create or edit your Assets. The API only supports JSON. So you have to create a JSON file with your assets’ addresses and other information. You’ll need to convert, or geocode, the addresses in your file to latitude/longitude (`lat` / `long`) coordinates. Those coordinates will be used for most of Woosmap features like [local searches](https://developers.woosmap.com/products/search-api/get-started/), [stores nearby a user location](https://developers.woosmap.com/products/geolocation-api/stores/) or for displaying markers on a map with [Woosmap Javascript API](https://developers.woosmap.com/products/js-api/get-started/).\n",
                "type": "text/plain"
            },
            "item": [
                {
                    "id": "38fdccdb-9622-4495-94ee-7fe0d72f4f82",
                    "name": "Create your Assets",
                    "request": {
                        "name": "Create your Assets",
                        "description": {
                            "content": "Used to batch create Assets to a specific project identified with the `private_key` parameter.\n",
                            "type": "text/plain"
                        },
                        "url": {
                            "protocol": "https",
                            "path": [
                                "stores"
                            ],
                            "host": [
                                "api",
                                "woosmap",
                                "com"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "private_key"
                                },
                                {
                                    "key": "value",
                                    "value": "<API Key>"
                                },
                                {
                                    "key": "in",
                                    "value": "query"
                                }
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"stores\": [\n        {\n            \"location\": {\n                \"lat\": \"<number>\",\n                \"lng\": \"<number>\"\n            },\n            \"name\": \"<string>\",\n            \"storeId\": \"<string>\",\n            \"address\": {\n                \"lines\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"country_code\": \"<string>\",\n                \"city\": \"<string>\",\n                \"zipcode\": \"<string>\"\n            },\n            \"contact\": {\n                \"website\": \"<string>\",\n                \"phone\": \"<string>\",\n                \"email\": \"<string>\"\n            },\n            \"types\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"tags\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"userProperties\": \"<object>\",\n            \"localizedNames\": \"<object>\",\n            \"openingHours\": {\n                \"timezone\": \"<string>\",\n                \"usual\": {\n                    \"1\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"2\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"3\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"4\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"5\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"6\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"7\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"default\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ]\n                },\n                \"special\": {\n                    \"YYYY-MM-DD\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ]\n                }\n            }\n        },\n        {\n            \"location\": {\n                \"lat\": \"<number>\",\n                \"lng\": \"<number>\"\n            },\n            \"name\": \"<string>\",\n            \"storeId\": \"<string>\",\n            \"address\": {\n                \"lines\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"country_code\": \"<string>\",\n                \"city\": \"<string>\",\n                \"zipcode\": \"<string>\"\n            },\n            \"contact\": {\n                \"website\": \"<string>\",\n                \"phone\": \"<string>\",\n                \"email\": \"<string>\"\n            },\n            \"types\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"tags\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"userProperties\": \"<object>\",\n            \"localizedNames\": \"<object>\",\n            \"openingHours\": {\n                \"timezone\": \"<string>\",\n                \"usual\": {\n                    \"1\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"2\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"3\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"4\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"5\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"6\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"7\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"default\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ]\n                },\n                \"special\": {\n                    \"YYYY-MM-DD\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ]\n                }\n            }\n        }\n    ]\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "93f12e89-9d9f-4981-8e56-37aab7a6540a",
                            "name": "200 OK",
                            "originalRequest": {
                                "url": {
                                    "protocol": "https",
                                    "path": [
                                        "stores"
                                    ],
                                    "host": [
                                        "api",
                                        "woosmap",
                                        "com"
                                    ],
                                    "query": [
                                        {
                                            "key": "private_key",
                                            "value": "<API Key>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"stores\": [\n        {\n            \"types\": [\n                \"drive\",\n                \"click_and_collect\"\n            ],\n            \"tags\": [\n                \"wifi\",\n                \"covered_parking\"\n            ],\n            \"location\": {\n                \"lat\": 42.6251184,\n                \"lng\": 2.4270975\n            },\n            \"storeId\": \"STORE_ID_123456\",\n            \"name\": \"My Cool Store\",\n            \"address\": {\n                \"lines\": [\n                    \"Building Centre\",\n                    \"26 Store Street\"\n                ],\n                \"countryCode\": \"UK\",\n                \"city\": \"London\",\n                \"zipcode\": \"WC1E 7BT\"\n            },\n            \"contact\": {\n                \"website\": \"https://www.woosmap.com\",\n                \"phone\": \"+44 20 7693 4000\",\n                \"email\": \"contact@woosmap.com\"\n            },\n            \"userProperties\": {\n                \"some_user_properties\": \"associated user value\"\n            },\n            \"openingHours\": {\n                \"timezone\": \"Europe/London\",\n                \"usual\": {\n                    \"1\": [],\n                    \"default\": [\n                        {\n                            \"start\": \"08:30\",\n                            \"end\": \"22:00\"\n                        }\n                    ]\n                },\n                \"special\": {\n                    \"2015-02-07\": [\n                        {\n                            \"start\": \"08:00\",\n                            \"end\": \"23:00\"\n                        }\n                    ],\n                    \"2015-02-08\": []\n                }\n            }\n        }\n    ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "470a70f6-d6b2-4637-b0bc-fc99fe43cad5",
                    "name": "Update the Assets",
                    "request": {
                        "name": "Update the Assets",
                        "description": {
                            "content": "Used to update assets in batch. `storeId` must exists when using `PUT` method, if one asset does not exists, the batch will be refused.",
                            "type": "text/plain"
                        },
                        "url": {
                            "protocol": "https",
                            "path": [
                                "stores"
                            ],
                            "host": [
                                "api",
                                "woosmap",
                                "com"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "private_key"
                                },
                                {
                                    "key": "value",
                                    "value": "<API Key>"
                                },
                                {
                                    "key": "in",
                                    "value": "query"
                                }
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"stores\": [\n        {\n            \"location\": {\n                \"lat\": \"<number>\",\n                \"lng\": \"<number>\"\n            },\n            \"name\": \"<string>\",\n            \"storeId\": \"<string>\",\n            \"address\": {\n                \"lines\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"country_code\": \"<string>\",\n                \"city\": \"<string>\",\n                \"zipcode\": \"<string>\"\n            },\n            \"contact\": {\n                \"website\": \"<string>\",\n                \"phone\": \"<string>\",\n                \"email\": \"<string>\"\n            },\n            \"types\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"tags\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"userProperties\": \"<object>\",\n            \"localizedNames\": \"<object>\",\n            \"openingHours\": {\n                \"timezone\": \"<string>\",\n                \"usual\": {\n                    \"1\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"2\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"3\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"4\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"5\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"6\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"7\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"default\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ]\n                },\n                \"special\": {\n                    \"YYYY-MM-DD\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ]\n                }\n            }\n        },\n        {\n            \"location\": {\n                \"lat\": \"<number>\",\n                \"lng\": \"<number>\"\n            },\n            \"name\": \"<string>\",\n            \"storeId\": \"<string>\",\n            \"address\": {\n                \"lines\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"country_code\": \"<string>\",\n                \"city\": \"<string>\",\n                \"zipcode\": \"<string>\"\n            },\n            \"contact\": {\n                \"website\": \"<string>\",\n                \"phone\": \"<string>\",\n                \"email\": \"<string>\"\n            },\n            \"types\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"tags\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"userProperties\": \"<object>\",\n            \"localizedNames\": \"<object>\",\n            \"openingHours\": {\n                \"timezone\": \"<string>\",\n                \"usual\": {\n                    \"1\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"2\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"3\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"4\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"5\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"6\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"7\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"default\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ]\n                },\n                \"special\": {\n                    \"YYYY-MM-DD\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ]\n                }\n            }\n        }\n    ]\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "02f5da14-6e8e-4689-86f9-4c20ff2c120f",
                            "name": "200 OK",
                            "originalRequest": {
                                "url": {
                                    "protocol": "https",
                                    "path": [
                                        "stores"
                                    ],
                                    "host": [
                                        "api",
                                        "woosmap",
                                        "com"
                                    ],
                                    "query": [
                                        {
                                            "key": "private_key",
                                            "value": "<API Key>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"stores\": [\n        {\n            \"types\": [\n                \"drive\",\n                \"click_and_collect\"\n            ],\n            \"tags\": [\n                \"wifi\",\n                \"covered_parking\"\n            ],\n            \"location\": {\n                \"lat\": 42.6251184,\n                \"lng\": 2.4270975\n            },\n            \"storeId\": \"STORE_ID_123456\",\n            \"name\": \"My Cool Store\",\n            \"address\": {\n                \"lines\": [\n                    \"Building Centre\",\n                    \"26 Store Street\"\n                ],\n                \"countryCode\": \"UK\",\n                \"city\": \"London\",\n                \"zipcode\": \"WC1E 7BT\"\n            },\n            \"contact\": {\n                \"website\": \"https://www.woosmap.com\",\n                \"phone\": \"+44 20 7693 4000\",\n                \"email\": \"contact@woosmap.com\"\n            },\n            \"userProperties\": {\n                \"some_user_properties\": \"associated user value\"\n            },\n            \"openingHours\": {\n                \"timezone\": \"Europe/London\",\n                \"usual\": {\n                    \"1\": [],\n                    \"default\": [\n                        {\n                            \"start\": \"08:30\",\n                            \"end\": \"22:00\"\n                        }\n                    ]\n                },\n                \"special\": {\n                    \"2015-02-07\": [\n                        {\n                            \"start\": \"08:00\",\n                            \"end\": \"23:00\"\n                        }\n                    ],\n                    \"2015-02-08\": []\n                }\n            }\n        }\n    ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "4200af1c-e208-46c8-8c36-e65a7bb934cd",
                    "name": "Delete the Assets",
                    "request": {
                        "name": "Delete the Assets",
                        "description": {
                            "content": "Used to delete one or more assets. The `storeId` is the id of the asset to delete. To delete several assets, use the comma as a separator.",
                            "type": "text/plain"
                        },
                        "url": {
                            "protocol": "https",
                            "path": [
                                "stores"
                            ],
                            "host": [
                                "api",
                                "woosmap",
                                "com"
                            ],
                            "query": [
                                {
                                    "disabled": true,
                                    "key": "storeId",
                                    "value": "<string>",
                                    "description": "The asset ID to delete"
                                }
                            ],
                            "variable": []
                        },
                        "method": "DELETE",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "private_key"
                                },
                                {
                                    "key": "value",
                                    "value": "<API Key>"
                                },
                                {
                                    "key": "in",
                                    "value": "query"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "2ecbf6ba-e262-46f6-ae0c-21c0e9618fde",
                            "name": "200 OK",
                            "originalRequest": {
                                "url": {
                                    "protocol": "https",
                                    "path": [
                                        "stores"
                                    ],
                                    "host": [
                                        "api",
                                        "woosmap",
                                        "com"
                                    ],
                                    "query": [
                                        {
                                            "key": "storeId",
                                            "value": "STORE_ID_123456"
                                        },
                                        {
                                            "key": "private_key",
                                            "value": "<API Key>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "2c2a1761-a2b2-445d-9273-b2d64ce97402",
                    "name": "Get Asset from ID",
                    "request": {
                        "name": "Get Asset from ID",
                        "description": {
                            "content": "Used to retrieve an asset from his `storeId`\n",
                            "type": "text/plain"
                        },
                        "url": {
                            "protocol": "https",
                            "path": [
                                "stores",
                                ":storeId"
                            ],
                            "host": [
                                "api",
                                "woosmap",
                                "com"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "storeId",
                                    "description": "(Required) ID of the asset to get"
                                }
                            ]
                        },
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "key"
                                },
                                {
                                    "key": "value",
                                    "value": "<API Key>"
                                },
                                {
                                    "key": "in",
                                    "value": "query"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "4da9106a-e275-450d-8761-f32ad4d1da01",
                            "name": "200 OK",
                            "originalRequest": {
                                "url": {
                                    "protocol": "https",
                                    "path": [
                                        "stores",
                                        ":storeId"
                                    ],
                                    "host": [
                                        "api",
                                        "woosmap",
                                        "com"
                                    ],
                                    "query": [
                                        {
                                            "key": "key",
                                            "value": "<API Key>"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "storeId",
                                            "description": "(Required) ID of the asset to get"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"type\": \"Feature\",\n \"properties\": {\n  \"store_id\": \"boroughmarket\",\n  \"name\": \"Borough Market\",\n  \"contact\": {\n   \"phone\": \"020 7407 1002\",\n   \"website\": \"http://boroughmarket.org.uk\"\n  },\n  \"address\": {\n   \"lines\": [\n    \"8 Southwark St\"\n   ],\n   \"country_code\": \"UK\",\n   \"city\": \"London\",\n   \"zipcode\": \"SE1 1TL\"\n  },\n  \"user_properties\": {\n   \"photo\": \"https://preview.webgeoservices.com/jsfiddle/boroughmarket.jpeg\",\n   \"placeId\": \"ChIJD2bPdVcDdkgRiDyO6mrCsu4\"\n  },\n  \"tags\": [],\n  \"types\": [\n   \"covered\"\n  ],\n  \"open\": {\n   \"open_now\": true,\n   \"open_hours\": [\n    {\n     \"end\": \"17:00\",\n     \"start\": \"10:00\"\n    }\n   ],\n   \"week_day\": 3,\n   \"current_slice\": {\n    \"end\": \"17:00\",\n    \"start\": \"10:00\"\n   }\n  },\n  \"weekly_opening\": {\n   \"1\": {\n    \"hours\": [\n     {\n      \"end\": \"17:00\",\n      \"start\": \"10:00\"\n     }\n    ],\n    \"isSpecial\": false\n   },\n   \"2\": {\n    \"hours\": [\n     {\n      \"end\": \"17:00\",\n      \"start\": \"10:00\"\n     }\n    ],\n    \"isSpecial\": false\n   },\n   \"3\": {\n    \"hours\": [\n     {\n      \"end\": \"17:00\",\n      \"start\": \"10:00\"\n     }\n    ],\n    \"isSpecial\": false\n   },\n   \"4\": {\n    \"hours\": [\n     {\n      \"end\": \"17:00\",\n      \"start\": \"10:00\"\n     }\n    ],\n    \"isSpecial\": false\n   },\n   \"5\": {\n    \"hours\": [\n     {\n      \"end\": \"18:00\",\n      \"start\": \"10:00\"\n     }\n    ],\n    \"isSpecial\": false\n   },\n   \"6\": {\n    \"hours\": [\n     {\n      \"end\": \"17:00\",\n      \"start\": \"10:00\"\n     }\n    ],\n    \"isSpecial\": false\n   },\n   \"7\": {\n    \"hours\": [],\n    \"isSpecial\": false\n   },\n   \"timezone\": \"Europe/London\"\n  },\n  \"opening_hours\": {\n   \"usual\": {\n    \"5\": [\n     {\n      \"end\": \"18:00\",\n      \"start\": \"10:00\"\n     }\n    ],\n    \"7\": [],\n    \"default\": [\n     {\n      \"end\": \"17:00\",\n      \"start\": \"10:00\"\n     }\n    ]\n   },\n   \"timezone\": \"Europe/London\"\n  }\n },\n \"geometry\": {\n  \"type\": \"Point\",\n  \"coordinates\": [\n   -0.090679,\n   51.505046\n  ]\n }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "dcbe951e-a615-45cf-ac68-0884a129f14a",
                            "name": "401 UNAUTHORIZED",
                            "originalRequest": {
                                "url": {
                                    "protocol": "https",
                                    "path": [
                                        "stores",
                                        ":storeId"
                                    ],
                                    "host": [
                                        "api",
                                        "woosmap",
                                        "com"
                                    ],
                                    "query": [
                                        {
                                            "key": "key",
                                            "value": "<API Key>"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "storeId",
                                            "description": "(Required) ID of the asset to get"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"detail\": \"Incorrect authentication credentials. Please check or use a valid API Key\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "935208bf-1724-4478-8d62-b7e986b44faf",
                            "name": "404 NOT FOUND - `storeId` do not exist in the project identified with the key parameter.",
                            "originalRequest": {
                                "url": {
                                    "protocol": "https",
                                    "path": [
                                        "stores",
                                        ":storeId"
                                    ],
                                    "host": [
                                        "api",
                                        "woosmap",
                                        "com"
                                    ],
                                    "query": [
                                        {
                                            "key": "key",
                                            "value": "<API Key>"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "storeId",
                                            "description": "(Required) ID of the asset to get"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "4c074e77-2850-40e7-9974-1e2dcedc0439",
                    "name": "Replace all assets",
                    "request": {
                        "name": "Replace all assets",
                        "description": {
                            "content": "To replace all your Assets. This endpoint will delete all previous assets and import assets in request body. During the operation previous assets could always be displayed on map. If the import failed previous assets are not deleted.",
                            "type": "text/plain"
                        },
                        "url": {
                            "protocol": "https",
                            "path": [
                                "stores",
                                "replace"
                            ],
                            "host": [
                                "api",
                                "woosmap",
                                "com"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "private_key"
                                },
                                {
                                    "key": "value",
                                    "value": "<API Key>"
                                },
                                {
                                    "key": "in",
                                    "value": "query"
                                }
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"stores\": [\n        {\n            \"location\": {\n                \"lat\": \"<number>\",\n                \"lng\": \"<number>\"\n            },\n            \"name\": \"<string>\",\n            \"storeId\": \"<string>\",\n            \"address\": {\n                \"lines\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"country_code\": \"<string>\",\n                \"city\": \"<string>\",\n                \"zipcode\": \"<string>\"\n            },\n            \"contact\": {\n                \"website\": \"<string>\",\n                \"phone\": \"<string>\",\n                \"email\": \"<string>\"\n            },\n            \"types\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"tags\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"userProperties\": \"<object>\",\n            \"localizedNames\": \"<object>\",\n            \"openingHours\": {\n                \"timezone\": \"<string>\",\n                \"usual\": {\n                    \"1\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"2\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"3\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"4\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"5\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"6\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"7\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"default\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ]\n                },\n                \"special\": {\n                    \"YYYY-MM-DD\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ]\n                }\n            }\n        },\n        {\n            \"location\": {\n                \"lat\": \"<number>\",\n                \"lng\": \"<number>\"\n            },\n            \"name\": \"<string>\",\n            \"storeId\": \"<string>\",\n            \"address\": {\n                \"lines\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"country_code\": \"<string>\",\n                \"city\": \"<string>\",\n                \"zipcode\": \"<string>\"\n            },\n            \"contact\": {\n                \"website\": \"<string>\",\n                \"phone\": \"<string>\",\n                \"email\": \"<string>\"\n            },\n            \"types\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"tags\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"userProperties\": \"<object>\",\n            \"localizedNames\": \"<object>\",\n            \"openingHours\": {\n                \"timezone\": \"<string>\",\n                \"usual\": {\n                    \"1\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"2\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"3\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"4\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"5\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"6\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"7\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"default\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ]\n                },\n                \"special\": {\n                    \"YYYY-MM-DD\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ]\n                }\n            }\n        }\n    ]\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "9bf0f66f-f3aa-40a6-bd4a-9991f8d527a2",
                            "name": "200 OK",
                            "originalRequest": {
                                "url": {
                                    "protocol": "https",
                                    "path": [
                                        "stores",
                                        "replace"
                                    ],
                                    "host": [
                                        "api",
                                        "woosmap",
                                        "com"
                                    ],
                                    "query": [
                                        {
                                            "key": "private_key",
                                            "value": "<API Key>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"stores\": [\n        {\n            \"types\": [\n                \"drive\",\n                \"click_and_collect\"\n            ],\n            \"tags\": [\n                \"wifi\",\n                \"covered_parking\"\n            ],\n            \"location\": {\n                \"lat\": 42.6251184,\n                \"lng\": 2.4270975\n            },\n            \"storeId\": \"STORE_ID_123456\",\n            \"name\": \"My Cool Store\",\n            \"address\": {\n                \"lines\": [\n                    \"Building Centre\",\n                    \"26 Store Street\"\n                ],\n                \"countryCode\": \"UK\",\n                \"city\": \"London\",\n                \"zipcode\": \"WC1E 7BT\"\n            },\n            \"contact\": {\n                \"website\": \"https://www.woosmap.com\",\n                \"phone\": \"+44 20 7693 4000\",\n                \"email\": \"contact@woosmap.com\"\n            },\n            \"userProperties\": {\n                \"some_user_properties\": \"associated user value\"\n            },\n            \"openingHours\": {\n                \"timezone\": \"Europe/London\",\n                \"usual\": {\n                    \"1\": [],\n                    \"default\": [\n                        {\n                            \"start\": \"08:30\",\n                            \"end\": \"22:00\"\n                        }\n                    ]\n                },\n                \"special\": {\n                    \"2015-02-07\": [\n                        {\n                            \"start\": \"08:00\",\n                            \"end\": \"23:00\"\n                        }\n                    ],\n                    \"2015-02-08\": []\n                }\n            }\n        }\n    ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "eb46a91e-d0a3-469c-8672-6c9a928d439c",
                    "name": "Create your Zones",
                    "request": {
                        "name": "Create your Zones",
                        "description": {
                            "content": "Used to batch create Zones to a specific project identified with the `private_key` parameter.\n",
                            "type": "text/plain"
                        },
                        "url": {
                            "protocol": "https",
                            "path": [
                                "zones"
                            ],
                            "host": [
                                "api",
                                "woosmap",
                                "com"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "private_key"
                                },
                                {
                                    "key": "value",
                                    "value": "<API Key>"
                                },
                                {
                                    "key": "in",
                                    "value": "query"
                                }
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"zones\": [\n        {\n            \"store_id\": \"<string>\",\n            \"zone_id\": \"<string>\",\n            \"polygon\": \"<string>\",\n            \"description\": \"<string>\",\n            \"types\": [\n                \"<string>\",\n                \"<string>\"\n            ]\n        },\n        {\n            \"store_id\": \"<string>\",\n            \"zone_id\": \"<string>\",\n            \"polygon\": \"<string>\",\n            \"description\": \"<string>\",\n            \"types\": [\n                \"<string>\",\n                \"<string>\"\n            ]\n        }\n    ]\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "891b1689-6d79-40d5-928c-b2f9eac46f54",
                            "name": "200 OK",
                            "originalRequest": {
                                "url": {
                                    "protocol": "https",
                                    "path": [
                                        "zones"
                                    ],
                                    "host": [
                                        "api",
                                        "woosmap",
                                        "com"
                                    ],
                                    "query": [
                                        {
                                            "key": "private_key",
                                            "value": "<API Key>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"zones\": [\n        {\n            \"zone_id\": \"ZoneA\",\n            \"description\": \"Delivery Zone for Store A\",\n            \"store_id\": \"store_a\",\n            \"polygon\": \"POLYGON ((-122.496116 37.7648181,-122.4954079 37.751518,-122.4635648 37.7530788,-122.4618481 37.7514501,-122.4601315 37.7521288,-122.4565266 37.7513144,-122.4540375 37.7566755,-122.4528359 37.7583041,-122.4515485 37.7595934,-122.4546384 37.774656,-122.4718903 37.7731635,-122.472577 37.772485,-122.4755811 37.7725529,-122.4791001 37.7723493,-122.4793576 37.7713995,-122.4784993 37.769839,-122.4783276 37.7680071,-122.4774693 37.766718,-122.4772118 37.7652931,-122.496116 37.7648181))\",\n            \"types\": [\n                \"delivery\"\n            ]\n        },\n        {\n            \"zone_id\": \"ZoneB\",\n            \"description\": \"Delivery Zone for Store B\",\n            \"store_id\": \"store_b\",\n            \"polygon\": \"POLYGON ((-122.4546384 37.774656,-122.4515485 37.7595934,-122.4354306 37.7602172,-122.4333707 37.7512596,-122.423071 37.7511239,-122.4242726 37.7687665,-122.4259893 37.7691736,-122.4289075 37.7732444,-122.4306241 37.7850483,-122.4472753 37.7830133,-122.445902 37.7759581,-122.4546384 37.774656))\",\n            \"types\": [\n                \"delivery\"\n            ]\n        },\n        {\n            \"zone_id\": \"ZoneC\",\n            \"description\": \"Delivery Zone for Store C\",\n            \"store_id\": \"store_c\",\n            \"polygon\": \"POLYGON ((-122.4758889 37.7524995,-122.4751594 37.7321718,-122.4688079 37.7299995,-122.4648597 37.7261979,-122.4519851 37.7228035,-122.4483802 37.7215815,-122.4458053 37.726741,-122.4365356 37.7310857,-122.4315574 37.7324433,-122.4246909 37.7312214,-122.4219444 37.731493,-122.423071 37.7511239,-122.4333707 37.7512596,-122.4354306 37.7602172,-122.4515485 37.7595934,-122.4528628 37.7582744,-122.4540375 37.7566755,-122.4565266 37.7513144,-122.4601315 37.7521288,-122.4618481 37.7514501,-122.4635648 37.7530788,-122.4758889 37.7524995))\",\n            \"types\": [\n                \"delivery\"\n            ]\n        }\n    ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "fdf7e460-fef4-4952-94b0-d90157a4390b",
                    "name": "Update the Zones.",
                    "request": {
                        "name": "Update the Zones.",
                        "description": {
                            "content": "Used to update zones in batch. `zone_id` must exists when using `PUT` method, if one zone does not exists, the batch will be refused.",
                            "type": "text/plain"
                        },
                        "url": {
                            "protocol": "https",
                            "path": [
                                "zones"
                            ],
                            "host": [
                                "api",
                                "woosmap",
                                "com"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "private_key"
                                },
                                {
                                    "key": "value",
                                    "value": "<API Key>"
                                },
                                {
                                    "key": "in",
                                    "value": "query"
                                }
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"stores\": [\n        {\n            \"location\": {\n                \"lat\": \"<number>\",\n                \"lng\": \"<number>\"\n            },\n            \"name\": \"<string>\",\n            \"storeId\": \"<string>\",\n            \"address\": {\n                \"lines\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"country_code\": \"<string>\",\n                \"city\": \"<string>\",\n                \"zipcode\": \"<string>\"\n            },\n            \"contact\": {\n                \"website\": \"<string>\",\n                \"phone\": \"<string>\",\n                \"email\": \"<string>\"\n            },\n            \"types\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"tags\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"userProperties\": \"<object>\",\n            \"localizedNames\": \"<object>\",\n            \"openingHours\": {\n                \"timezone\": \"<string>\",\n                \"usual\": {\n                    \"1\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"2\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"3\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"4\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"5\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"6\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"7\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"default\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ]\n                },\n                \"special\": {\n                    \"YYYY-MM-DD\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ]\n                }\n            }\n        },\n        {\n            \"location\": {\n                \"lat\": \"<number>\",\n                \"lng\": \"<number>\"\n            },\n            \"name\": \"<string>\",\n            \"storeId\": \"<string>\",\n            \"address\": {\n                \"lines\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"country_code\": \"<string>\",\n                \"city\": \"<string>\",\n                \"zipcode\": \"<string>\"\n            },\n            \"contact\": {\n                \"website\": \"<string>\",\n                \"phone\": \"<string>\",\n                \"email\": \"<string>\"\n            },\n            \"types\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"tags\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"userProperties\": \"<object>\",\n            \"localizedNames\": \"<object>\",\n            \"openingHours\": {\n                \"timezone\": \"<string>\",\n                \"usual\": {\n                    \"1\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"2\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"3\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"4\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"5\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"6\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"7\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ],\n                    \"default\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ]\n                },\n                \"special\": {\n                    \"YYYY-MM-DD\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        },\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ]\n                }\n            }\n        }\n    ]\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "d8458b65-d226-4e79-9a7f-d5246bae3cf5",
                            "name": "200 OK",
                            "originalRequest": {
                                "url": {
                                    "protocol": "https",
                                    "path": [
                                        "zones"
                                    ],
                                    "host": [
                                        "api",
                                        "woosmap",
                                        "com"
                                    ],
                                    "query": [
                                        {
                                            "key": "private_key",
                                            "value": "<API Key>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"zones\": [\n        {\n            \"zone_id\": \"ZoneA\",\n            \"description\": \"Delivery Zone for Store A\",\n            \"store_id\": \"store_a\",\n            \"polygon\": \"POLYGON ((-122.496116 37.7648181,-122.4954079 37.751518,-122.4635648 37.7530788,-122.4618481 37.7514501,-122.4601315 37.7521288,-122.4565266 37.7513144,-122.4540375 37.7566755,-122.4528359 37.7583041,-122.4515485 37.7595934,-122.4546384 37.774656,-122.4718903 37.7731635,-122.472577 37.772485,-122.4755811 37.7725529,-122.4791001 37.7723493,-122.4793576 37.7713995,-122.4784993 37.769839,-122.4783276 37.7680071,-122.4774693 37.766718,-122.4772118 37.7652931,-122.496116 37.7648181))\",\n            \"types\": [\n                \"delivery\"\n            ]\n        },\n        {\n            \"zone_id\": \"ZoneB\",\n            \"description\": \"Delivery Zone for Store B\",\n            \"store_id\": \"store_b\",\n            \"polygon\": \"POLYGON ((-122.4546384 37.774656,-122.4515485 37.7595934,-122.4354306 37.7602172,-122.4333707 37.7512596,-122.423071 37.7511239,-122.4242726 37.7687665,-122.4259893 37.7691736,-122.4289075 37.7732444,-122.4306241 37.7850483,-122.4472753 37.7830133,-122.445902 37.7759581,-122.4546384 37.774656))\",\n            \"types\": [\n                \"delivery\"\n            ]\n        },\n        {\n            \"zone_id\": \"ZoneC\",\n            \"description\": \"Delivery Zone for Store C\",\n            \"store_id\": \"store_c\",\n            \"polygon\": \"POLYGON ((-122.4758889 37.7524995,-122.4751594 37.7321718,-122.4688079 37.7299995,-122.4648597 37.7261979,-122.4519851 37.7228035,-122.4483802 37.7215815,-122.4458053 37.726741,-122.4365356 37.7310857,-122.4315574 37.7324433,-122.4246909 37.7312214,-122.4219444 37.731493,-122.423071 37.7511239,-122.4333707 37.7512596,-122.4354306 37.7602172,-122.4515485 37.7595934,-122.4528628 37.7582744,-122.4540375 37.7566755,-122.4565266 37.7513144,-122.4601315 37.7521288,-122.4618481 37.7514501,-122.4635648 37.7530788,-122.4758889 37.7524995))\",\n            \"types\": [\n                \"delivery\"\n            ]\n        }\n    ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "b5f5cc8d-e974-4d04-9fc1-bc49639e1491",
                    "name": "Delete the Zones",
                    "request": {
                        "name": "Delete the Zones",
                        "description": {
                            "content": "Used to delete one or more Zones. The `zone_id` is the id of the zone to delete. To delete several zones, use the comma as a separator.",
                            "type": "text/plain"
                        },
                        "url": {
                            "protocol": "https",
                            "path": [
                                "zones"
                            ],
                            "host": [
                                "api",
                                "woosmap",
                                "com"
                            ],
                            "query": [
                                {
                                    "disabled": true,
                                    "key": "zone_id",
                                    "value": "<string>",
                                    "description": "The zone ID to delete"
                                }
                            ],
                            "variable": []
                        },
                        "method": "DELETE",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "private_key"
                                },
                                {
                                    "key": "value",
                                    "value": "<API Key>"
                                },
                                {
                                    "key": "in",
                                    "value": "query"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "751808a8-71cf-425f-a155-7e9599983560",
                            "name": "200 OK",
                            "originalRequest": {
                                "url": {
                                    "protocol": "https",
                                    "path": [
                                        "zones"
                                    ],
                                    "host": [
                                        "api",
                                        "woosmap",
                                        "com"
                                    ],
                                    "query": [
                                        {
                                            "key": "zone_id",
                                            "value": "ZoneA"
                                        },
                                        {
                                            "key": "private_key",
                                            "value": "<API Key>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "7169a505-bff1-492e-8609-a6428211e797",
                    "name": "Get Zone from ID",
                    "request": {
                        "name": "Get Zone from ID",
                        "description": {
                            "content": "Used to retrieve a zone from his `zone_id`\n",
                            "type": "text/plain"
                        },
                        "url": {
                            "protocol": "https",
                            "path": [
                                "zones",
                                ":zone_id"
                            ],
                            "host": [
                                "api",
                                "woosmap",
                                "com"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "<string>",
                                    "key": "zone_id",
                                    "description": "(Required) ID of the zone to get"
                                }
                            ]
                        },
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "key"
                                },
                                {
                                    "key": "value",
                                    "value": "<API Key>"
                                },
                                {
                                    "key": "in",
                                    "value": "query"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "609d7808-88ff-45dd-9abe-eebb44c6e329",
                            "name": "200 OK",
                            "originalRequest": {
                                "url": {
                                    "protocol": "https",
                                    "path": [
                                        "zones",
                                        ":zone_id"
                                    ],
                                    "host": [
                                        "api",
                                        "woosmap",
                                        "com"
                                    ],
                                    "query": [
                                        {
                                            "key": "key",
                                            "value": "<API Key>"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "zone_id",
                                            "description": "(Required) ID of the zone to get"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"zone_id\": \"ZoneA\",\n \"description\": \"Delivery Zone for Store A\",\n \"store_id\": \"store_a\",\n \"polygon\": \"POLYGON ((-122.4546384 37.774656,-122.4515485 37.7595934,-122.4354306 37.7602172,-122.4333707 37.7512596,-122.423071 37.7511239,-122.4242726 37.7687665,-122.4259893 37.7691736,-122.4289075 37.7732444,-122.4306241 37.7850483,-122.4472753 37.7830133,-122.445902 37.7759581,-122.4546384 37.774656))\",\n \"types\": [\n  \"delivery\"\n ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "5d6cdcb6-430e-42ed-9d63-f9829c754243",
                            "name": "401 UNAUTHORIZED",
                            "originalRequest": {
                                "url": {
                                    "protocol": "https",
                                    "path": [
                                        "zones",
                                        ":zone_id"
                                    ],
                                    "host": [
                                        "api",
                                        "woosmap",
                                        "com"
                                    ],
                                    "query": [
                                        {
                                            "key": "key",
                                            "value": "<API Key>"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "zone_id",
                                            "description": "(Required) ID of the zone to get"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"detail\": \"Incorrect authentication credentials. Please check or use a valid API Key\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "988d84f2-e3a4-4454-8dab-d188cd36992b",
                            "name": "404 NOT FOUND - `zone_id` do not exist in the project identified with the key parameter.",
                            "originalRequest": {
                                "url": {
                                    "protocol": "https",
                                    "path": [
                                        "zones",
                                        ":zone_id"
                                    ],
                                    "host": [
                                        "api",
                                        "woosmap",
                                        "com"
                                    ],
                                    "query": [
                                        {
                                            "key": "key",
                                            "value": "<API Key>"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "<string>",
                                            "key": "zone_id",
                                            "description": "(Required) ID of the zone to get"
                                        }
                                    ]
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "1a81d5c9-c336-431e-ac3f-58b007ad3e43",
            "name": "Geolocation API",
            "description": {
                "content": "Geolocation API returns a location (or nearby stores) and accuracy radius based on an IP address. Request is done over HTTPS using GET. Response is formatted as JSON. You must specify a key in your request, included as the value of a `key` parameter for your public key or `private_key` for your private key. This key identifies your application for purposes of quota management. Learn how to [get a key](https://developers.woosmap.com/support/api-keys/).\n",
                "type": "text/plain"
            },
            "item": [
                {
                    "id": "d1a31228-65f5-4bf9-8052-5c4f8194462a",
                    "name": "Geolocation from an IP address",
                    "request": {
                        "name": "Geolocation from an IP address",
                        "description": {
                            "content": "The `/position` returns JSON location of your users thanks to IP address of their devices.\n",
                            "type": "text/plain"
                        },
                        "url": {
                            "protocol": "https",
                            "path": [
                                "geolocation",
                                "position"
                            ],
                            "host": [
                                "api",
                                "woosmap",
                                "com"
                            ],
                            "query": [
                                {
                                    "disabled": true,
                                    "key": "ip_address",
                                    "value": "<string>",
                                    "description": "The ip_address you want to geolocate. For **server call with private_key** only. Without this parameter, the API will geolocate the IP Address attached to the raw TCP request.\n"
                                }
                            ],
                            "variable": []
                        },
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "key"
                                },
                                {
                                    "key": "value",
                                    "value": "<API Key>"
                                },
                                {
                                    "key": "in",
                                    "value": "query"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "d7f7b3d0-52f7-45e2-95d4-7970dd9f229d",
                            "name": "200 OK",
                            "originalRequest": {
                                "url": {
                                    "protocol": "https",
                                    "path": [
                                        "geolocation",
                                        "position"
                                    ],
                                    "host": [
                                        "api",
                                        "woosmap",
                                        "com"
                                    ],
                                    "query": [
                                        {
                                            "key": "ip_address",
                                            "value": "75.134.29.90"
                                        },
                                        {
                                            "key": "key",
                                            "value": "<API Key>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"country_code\": \"FR\",\n \"country_name\": \"France\",\n \"continent\": \"Europe\",\n \"latitude\": 48.8582,\n \"longitude\": 2.3387,\n \"accuracy\": 500,\n \"viewport\": {\n  \"northeast\": {\n   \"lat\": 53.3497764205976,\n   \"lng\": 9.167877689543051\n  },\n  \"southwest\": {\n   \"lat\": 44.36662357940239,\n   \"lng\": -4.4904776895430505\n  }\n },\n \"timezone\": \"Europe/Paris\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "91e24aa6-ef11-40d0-b17d-a0c851bd1f96",
                            "name": "401 UNAUTHORIZED",
                            "originalRequest": {
                                "url": {
                                    "protocol": "https",
                                    "path": [
                                        "geolocation",
                                        "position"
                                    ],
                                    "host": [
                                        "api",
                                        "woosmap",
                                        "com"
                                    ],
                                    "query": [
                                        {
                                            "key": "ip_address",
                                            "value": "75.134.29.90"
                                        },
                                        {
                                            "key": "key",
                                            "value": "<API Key>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"detail\": \"Incorrect authentication credentials. Please check or use a valid API Key\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "1f8a5b94-8d00-4348-99f5-2c26496fddfe",
                            "name": "403 FORBIDDEN",
                            "originalRequest": {
                                "url": {
                                    "protocol": "https",
                                    "path": [
                                        "geolocation",
                                        "position"
                                    ],
                                    "host": [
                                        "api",
                                        "woosmap",
                                        "com"
                                    ],
                                    "query": [
                                        {
                                            "key": "ip_address",
                                            "value": "75.134.29.90"
                                        },
                                        {
                                            "key": "key",
                                            "value": "<API Key>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"detail\": \"Geolocation API is not enabled for this project.\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "e482c260-4e35-4325-af12-e25b0f06f764",
                    "name": "Assets nearby a Geolocation",
                    "request": {
                        "name": "Assets nearby a Geolocation",
                        "description": {
                            "content": "Retrieve the stores nearby an ip location. Stores are returned only if a relevant ip location is found - for an accuracy of 20km or less.\n",
                            "type": "text/plain"
                        },
                        "url": {
                            "protocol": "https",
                            "path": [
                                "geolocation",
                                "stores"
                            ],
                            "host": [
                                "api",
                                "woosmap",
                                "com"
                            ],
                            "query": [
                                {
                                    "disabled": true,
                                    "key": "ip_address",
                                    "value": "<string>",
                                    "description": "The ip_address you want to geolocate. For **server call with private_key** only. Without this parameter, the API will geolocate the IP Address attached to the raw TCP request.\n"
                                }
                            ],
                            "variable": []
                        },
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "key"
                                },
                                {
                                    "key": "value",
                                    "value": "<API Key>"
                                },
                                {
                                    "key": "in",
                                    "value": "query"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "da74116c-7828-49cd-a03c-47750f6113fc",
                            "name": "200 OK",
                            "originalRequest": {
                                "url": {
                                    "protocol": "https",
                                    "path": [
                                        "geolocation",
                                        "stores"
                                    ],
                                    "host": [
                                        "api",
                                        "woosmap",
                                        "com"
                                    ],
                                    "query": [
                                        {
                                            "key": "ip_address",
                                            "value": "75.134.29.90"
                                        },
                                        {
                                            "key": "key",
                                            "value": "<API Key>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"country_code\": \"FR\",\n \"country_name\": \"France\",\n \"continent\": \"Europe\",\n \"latitude\": 48.8323,\n \"longitude\": 2.4075,\n \"accuracy\": 200,\n \"viewport\": {\n  \"northeast\": {\n   \"lat\": 50.628930568239035,\n   \"lng\": 5.136987883597163\n  },\n  \"southwest\": {\n   \"lat\": 47.03566943176095,\n   \"lng\": -0.3219878835971626\n  }\n },\n \"postal_code\": \"75003\",\n \"timezone\": \"Europe/Paris\",\n \"stores\": {\n  \"type\": \"FeatureCollection\",\n  \"features\": [\n   {\n    \"type\": \"Feature\",\n    \"properties\": {\n     \"store_id\": \"boroughmarket\",\n     \"name\": \"Borough Market\",\n     \"contact\": {\n      \"phone\": \"020 7407 1002\",\n      \"website\": \"http://boroughmarket.org.uk\"\n     },\n     \"address\": {\n      \"lines\": [\n       \"8 Southwark St\"\n      ],\n      \"country_code\": null,\n      \"city\": \"London\",\n      \"zipcode\": \"SE1 1TL\"\n     },\n     \"user_properties\": {\n      \"photo\": \"https://preview.webgeoservices.com/jsfiddle/boroughmarket.jpeg\",\n      \"placeId\": \"ChIJD2bPdVcDdkgRiDyO6mrCsu4\"\n     },\n     \"tags\": [],\n     \"types\": [\n      \"covered\"\n     ],\n     \"open\": {\n      \"open_now\": true,\n      \"open_hours\": [\n       {\n        \"end\": \"17:00\",\n        \"start\": \"10:00\"\n       }\n      ],\n      \"week_day\": 1,\n      \"current_slice\": {\n       \"end\": \"17:00\",\n       \"start\": \"10:00\"\n      }\n     },\n     \"weekly_opening\": {\n      \"1\": {\n       \"hours\": [\n        {\n         \"end\": \"17:00\",\n         \"start\": \"10:00\"\n        }\n       ],\n       \"isSpecial\": false\n      },\n      \"2\": {\n       \"hours\": [\n        {\n         \"end\": \"17:00\",\n         \"start\": \"10:00\"\n        }\n       ],\n       \"isSpecial\": false\n      },\n      \"3\": {\n       \"hours\": [\n        {\n         \"end\": \"17:00\",\n         \"start\": \"10:00\"\n        }\n       ],\n       \"isSpecial\": false\n      },\n      \"4\": {\n       \"hours\": [\n        {\n         \"end\": \"17:00\",\n         \"start\": \"10:00\"\n        }\n       ],\n       \"isSpecial\": false\n      },\n      \"5\": {\n       \"hours\": [\n        {\n         \"end\": \"18:00\",\n         \"start\": \"10:00\"\n        }\n       ],\n       \"isSpecial\": false\n      },\n      \"6\": {\n       \"hours\": [\n        {\n         \"end\": \"17:00\",\n         \"start\": \"10:00\"\n        }\n       ],\n       \"isSpecial\": false\n      },\n      \"7\": {\n       \"hours\": [],\n       \"isSpecial\": false\n      },\n      \"timezone\": \"Europe/London\"\n     },\n     \"opening_hours\": {\n      \"usual\": {\n       \"5\": [\n        {\n         \"end\": \"18:00\",\n         \"start\": \"10:00\"\n        }\n       ],\n       \"7\": [],\n       \"default\": [\n        {\n         \"end\": \"17:00\",\n         \"start\": \"10:00\"\n        }\n       ]\n      },\n      \"timezone\": \"Europe/London\"\n     }\n    },\n    \"geometry\": {\n     \"type\": \"Point\",\n     \"coordinates\": [\n      -0.090679,\n      51.505046\n     ]\n    }\n   },\n   {\n    \"type\": \"Feature\",\n    \"properties\": {\n     \"store_id\": \"courssaleya\",\n     \"name\": \"Cours Saleya\",\n     \"contact\": {\n      \"phone\": \"04 92 14 46 14\",\n      \"website\": \"http://leblogduvieuxnice.nicematin.com/.services/blog/6a0120a864ed46970b0162fd89fc17970d/search?filter.q=marché\"\n     },\n     \"address\": {\n      \"lines\": [\n       \"Place Charles Félix\"\n      ],\n      \"country_code\": null,\n      \"city\": \"Nice\",\n      \"zipcode\": \"06300\"\n     },\n     \"user_properties\": {\n      \"photo\": \"https://preview.webgeoservices.com/jsfiddle/courssaleya.jpeg\",\n      \"placeId\": \"ChIJw3OrJKPazRIR6WPu_P9ByG4\"\n     },\n     \"tags\": [],\n     \"types\": [\n      \"covered\"\n     ],\n     \"open\": {\n      \"open_now\": false,\n      \"open_hours\": [],\n      \"week_day\": 1,\n      \"next_opening\": {\n       \"end\": \"17:30\",\n       \"start\": \"06:00\",\n       \"day\": \"2021-11-16\"\n      }\n     },\n     \"weekly_opening\": {\n      \"1\": {\n       \"hours\": [],\n       \"isSpecial\": false\n      },\n      \"2\": {\n       \"hours\": [\n        {\n         \"end\": \"17:30\",\n         \"start\": \"06:00\"\n        }\n       ],\n       \"isSpecial\": false\n      },\n      \"3\": {\n       \"hours\": [\n        {\n         \"end\": \"17:30\",\n         \"start\": \"06:00\"\n        }\n       ],\n       \"isSpecial\": false\n      },\n      \"4\": {\n       \"hours\": [\n        {\n         \"end\": \"17:30\",\n         \"start\": \"06:00\"\n        }\n       ],\n       \"isSpecial\": false\n      },\n      \"5\": {\n       \"hours\": [\n        {\n         \"end\": \"17:30\",\n         \"start\": \"06:00\"\n        }\n       ],\n       \"isSpecial\": false\n      },\n      \"6\": {\n       \"hours\": [\n        {\n         \"end\": \"17:30\",\n         \"start\": \"06:00\"\n        }\n       ],\n       \"isSpecial\": false\n      },\n      \"7\": {\n       \"hours\": [\n        {\n         \"end\": \"13:30\",\n         \"start\": \"06:00\"\n        }\n       ],\n       \"isSpecial\": false\n      },\n      \"timezone\": \"Europe/Paris\"\n     },\n     \"opening_hours\": {\n      \"usual\": {\n       \"1\": [],\n       \"7\": [\n        {\n         \"end\": \"13:30\",\n         \"start\": \"06:00\"\n        }\n       ],\n       \"default\": [\n        {\n         \"end\": \"17:30\",\n         \"start\": \"06:00\"\n        }\n       ]\n      },\n      \"timezone\": \"Europe/Paris\"\n     }\n    },\n    \"geometry\": {\n     \"type\": \"Point\",\n     \"coordinates\": [\n      7.275492,\n      43.69553\n     ]\n    }\n   }\n  ],\n  \"pagination\": {\n   \"page\": 1,\n   \"pageCount\": 1\n  }\n }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a657252c-15cf-4132-af84-1000477d5424",
                            "name": "401 UNAUTHORIZED",
                            "originalRequest": {
                                "url": {
                                    "protocol": "https",
                                    "path": [
                                        "geolocation",
                                        "stores"
                                    ],
                                    "host": [
                                        "api",
                                        "woosmap",
                                        "com"
                                    ],
                                    "query": [
                                        {
                                            "key": "ip_address",
                                            "value": "75.134.29.90"
                                        },
                                        {
                                            "key": "key",
                                            "value": "<API Key>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"detail\": \"Incorrect authentication credentials. Please check or use a valid API Key\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "311d45c8-4b4c-49f2-8c00-5e8eb52e2ccc",
                            "name": "403 FORBIDDEN",
                            "originalRequest": {
                                "url": {
                                    "protocol": "https",
                                    "path": [
                                        "geolocation",
                                        "stores"
                                    ],
                                    "host": [
                                        "api",
                                        "woosmap",
                                        "com"
                                    ],
                                    "query": [
                                        {
                                            "key": "ip_address",
                                            "value": "75.134.29.90"
                                        },
                                        {
                                            "key": "key",
                                            "value": "<API Key>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"detail\": \"Geolocation API is not enabled for this project.\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "9a506167-7bc5-4fee-aff9-732c5ef80bf3",
            "name": "Localities API",
            "description": {
                "content": "Woosmap Localities API is a web service that returns a great amount of geographical places in response to an HTTP request. Among others are city names, postal codes, suburbs, addresses or airports. Request is done over HTTPS using GET. Response is formatted as JSON. You must specify a key in your request, included as the value of a `key` parameter for your public key or `private_key` for your private key. This key identifies your application for purposes of quota management. Learn how to [get a key](https://developers.woosmap.com/support/api-keys/).\n",
                "type": "text/plain"
            },
            "item": [
                {
                    "id": "d1158b5e-ee8c-48d8-8664-ff3324c463ed",
                    "name": "Autocomplete for Localities",
                    "request": {
                        "name": "Autocomplete for Localities",
                        "description": {
                            "content": "Autocomplete on worldwide suggestions for a for text-based geographic searches. It can match on full words as well as substrings. You can therefore send queries as the user types, to provide on-the-fly city names, postal codes or suburb name suggestions.\n",
                            "type": "text/plain"
                        },
                        "url": {
                            "protocol": "https",
                            "path": [
                                "localities",
                                "autocomplete"
                            ],
                            "host": [
                                "api",
                                "woosmap",
                                "com"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "input",
                                    "value": "<string>",
                                    "description": "(Required) The text string on which to search, for example: \"london\" or \"123 Cross Road\". The Woosmap Localities API will return predictions matches based on this string and order the results based on their perceived relevance.\n"
                                },
                                {
                                    "disabled": true,
                                    "key": "types",
                                    "value": "<string>",
                                    "description": "The types of suggestion to return.\n* `locality`: includes locality names (from city to village) and suburbs * `postal_code`: publicly-used postal codes around the world * `address`: addresses (only available for UK and France) * `admin_level`: most commonly used administrative areas * `country`: countries as whole point of interest * `airport`: includes all medium sized to international sized airports * `train_station`: includes all train stations * `metro_station`: includes all metro stations * `shopping`: includes shopping malls (or \"shopping centers\") - *may include private retail brands* * `museum`: includes museums * `tourist_attraction`: includes tourist attractions like the Eiffel tower * `amusement_park`: includes amusement parks like Disneyland Paris * `art_gallery`: includes art galleries * `zoo`: includes zoos\n> The information returned on an `address` suggestion contain only a \"single-line\" description. A request to the [Details endpoint](/products/localities/details/) of the API must be performed to retrieve the location (geographic coordinates) and the address components (street address, zipcode, city..).\nNot specifying any type will only query `locality` and `postal_code`. Multiple types can be passed using the pipe character (`|`) as a separator. For example: `types=locality|airport|admin_level`.\n"
                                },
                                {
                                    "disabled": true,
                                    "key": "components",
                                    "value": "<string>",
                                    "description": "A grouping of places to which you would like to restrict your results. Currently, you can use `components` to filter over countries. Countries must be passed as a two character, ISO 3166-1 Alpha-2 compatible country code. For example: `components=country:fr` would restrict your results to places within France and `components=country:fr-fr` returns locations only in Metropolitan France. Multiple countries must be passed as multiple country:XX filters, with the pipe character (`|`) as a separator. For example: `components=country:gb|country:fr|country:be|country:sp|country:it` would restrict your results to city names or postal codes within the United Kingdom, France, Belgium, Spain and Italy.\n"
                                },
                                {
                                    "disabled": true,
                                    "key": "language",
                                    "value": "<string>",
                                    "description": "The language code, using ISO 3166-1 Alpha-2 country codes, indicating in which language the results should be returned, if possible. Searches are also biased to the selected language; results in the selected language may be given a higher ranking. If language is not supplied, the Localities service will use the default language of each country. No language necessary for `postal_code` request.\n"
                                },
                                {
                                    "disabled": true,
                                    "key": "data",
                                    "value": "<string>",
                                    "description": "Two values for this parameter: `standard` or `advanced`. By default, if the parameter is not defined, value is set as `standard`. The `advanced` value opens suggestions to worldwide postal codes in addition to postal codes for Western Europe. ***A dedicated option subject to specific billing on your license is needed to use this parameter. Please contact us if you are interested in using this parameter and you do not have subscribed the proper option yet.***\n"
                                },
                                {
                                    "disabled": true,
                                    "key": "extended",
                                    "value": "<string>",
                                    "description": "If set, this parameter allows a refined search over locality names that bears the same postal code. By triggering this parameter, integrators will benefit from a search spectrum on the `locality` type that ***includes postal codes***. To avoid confusion, it is recommended not to activate this parameter along with the `postal_code` type which could lead to duplicate locations. Also, the default description returned by the API changes to `name (postal code), admin_1, admin_0`. It is only available for France and Italy.\n"
                                }
                            ],
                            "variable": []
                        },
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "key"
                                },
                                {
                                    "key": "value",
                                    "value": "<API Key>"
                                },
                                {
                                    "key": "in",
                                    "value": "query"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "cd4c6ac8-38bd-4b53-b037-ec45b1a5225e",
                            "name": "200 OK",
                            "originalRequest": {
                                "url": {
                                    "protocol": "https",
                                    "path": [
                                        "localities",
                                        "autocomplete"
                                    ],
                                    "host": [
                                        "api",
                                        "woosmap",
                                        "com"
                                    ],
                                    "query": [
                                        {
                                            "key": "input",
                                            "value": "London"
                                        },
                                        {
                                            "key": "types",
                                            "value": "postal_code"
                                        },
                                        {
                                            "key": "components",
                                            "value": "country:fr|country:es"
                                        },
                                        {
                                            "key": "language",
                                            "value": "en"
                                        },
                                        {
                                            "key": "data",
                                            "value": "advanced"
                                        },
                                        {
                                            "key": "extended",
                                            "value": "postal_code"
                                        },
                                        {
                                            "key": "key",
                                            "value": "<API Key>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"localities\": [\n  {\n   \"public_id\": \"Ch6qA8cLmvyvEEoFy6nYeFcEdNU=\",\n   \"description\": \"London, City of London, United Kingdom\",\n   \"name\": \"London\",\n   \"type\": \"locality\",\n   \"location\": {\n    \"lat\": 51.50732,\n    \"lng\": -0.12764746\n   },\n   \"matched_substrings\": {\n    \"name\": [\n     {\n      \"offset\": 0,\n      \"length\": 6\n     }\n    ],\n    \"admin_1\": [\n     {\n      \"offset\": 8,\n      \"length\": 6\n     }\n    ],\n    \"description\": [\n     {\n      \"offset\": 0,\n      \"length\": 6\n     },\n     {\n      \"offset\": 16,\n      \"length\": 6\n     }\n    ]\n   },\n   \"admin_1\": \"City of London\",\n   \"locality\": \"\",\n   \"admin_0\": \"United Kingdom\"\n  },\n  {\n   \"public_id\": \"8tpkf5LFYQzfpzKxMovi+ObhRuQ=\",\n   \"description\": \"London, Ontario, Canada\",\n   \"name\": \"London\",\n   \"type\": \"locality\",\n   \"location\": {\n    \"lat\": 42.983673,\n    \"lng\": -81.2496\n   },\n   \"matched_substrings\": {\n    \"name\": [\n     {\n      \"offset\": 0,\n      \"length\": 6\n     }\n    ],\n    \"description\": [\n     {\n      \"offset\": 0,\n      \"length\": 6\n     }\n    ]\n   },\n   \"admin_1\": \"Ontario\",\n   \"locality\": \"\",\n   \"admin_0\": \"Canada\"\n  },\n  {\n   \"public_id\": \"lXJg4Ba5ZBZfVfsI9YWje/A4l2o=\",\n   \"description\": \"London, Kentucky, United States\",\n   \"name\": \"London\",\n   \"type\": \"locality\",\n   \"location\": {\n    \"lat\": 37.12898,\n    \"lng\": -84.08327\n   },\n   \"matched_substrings\": {\n    \"name\": [\n     {\n      \"offset\": 0,\n      \"length\": 6\n     }\n    ],\n    \"description\": [\n     {\n      \"offset\": 0,\n      \"length\": 6\n     }\n    ]\n   },\n   \"admin_1\": \"Kentucky\",\n   \"locality\": \"\",\n   \"admin_0\": \"United States\"\n  },\n  {\n   \"public_id\": \"aWawRrKbLmU0+dUpWo5TzH2p4QI=\",\n   \"description\": \"London, Ohio, United States\",\n   \"name\": \"London\",\n   \"type\": \"locality\",\n   \"location\": {\n    \"lat\": 39.886448,\n    \"lng\": -83.44825\n   },\n   \"matched_substrings\": {\n    \"name\": [\n     {\n      \"offset\": 0,\n      \"length\": 6\n     }\n    ],\n    \"description\": [\n     {\n      \"offset\": 0,\n      \"length\": 6\n     }\n    ]\n   },\n   \"admin_1\": \"Ohio\",\n   \"locality\": \"\",\n   \"admin_0\": \"United States\"\n  },\n  {\n   \"public_id\": \"ZLeThT8qWy+GJgMtlX+9jpQJpx8=\",\n   \"description\": \"London, Bushbuckridge, South Africa\",\n   \"name\": \"London\",\n   \"type\": \"locality\",\n   \"location\": {\n    \"lat\": -24.817778,\n    \"lng\": 31.047222\n   },\n   \"matched_substrings\": {\n    \"name\": [\n     {\n      \"offset\": 0,\n      \"length\": 6\n     }\n    ],\n    \"description\": [\n     {\n      \"offset\": 0,\n      \"length\": 6\n     }\n    ]\n   },\n   \"admin_1\": \"Mpumalanga\",\n   \"admin_2\": \"Bushbuckridge\",\n   \"locality\": \"\",\n   \"admin_0\": \"South Africa\"\n  }\n ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "48bcdcec-6f69-47b8-a069-e97c69920c83",
                            "name": "401 UNAUTHORIZED",
                            "originalRequest": {
                                "url": {
                                    "protocol": "https",
                                    "path": [
                                        "localities",
                                        "autocomplete"
                                    ],
                                    "host": [
                                        "api",
                                        "woosmap",
                                        "com"
                                    ],
                                    "query": [
                                        {
                                            "key": "input",
                                            "value": "London"
                                        },
                                        {
                                            "key": "types",
                                            "value": "postal_code"
                                        },
                                        {
                                            "key": "components",
                                            "value": "country:fr|country:es"
                                        },
                                        {
                                            "key": "language",
                                            "value": "en"
                                        },
                                        {
                                            "key": "data",
                                            "value": "advanced"
                                        },
                                        {
                                            "key": "extended",
                                            "value": "postal_code"
                                        },
                                        {
                                            "key": "key",
                                            "value": "<API Key>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"detail\": \"Incorrect authentication credentials. Please check or use a valid API Key\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "326a989e-0b10-4bd6-8a46-97afbf0a0003",
                    "name": "Details of a Locality",
                    "request": {
                        "name": "Details of a Locality",
                        "description": {
                            "content": "Provides details of an autocomplete suggestion (using the suggestion’s `public_id`).\n",
                            "type": "text/plain"
                        },
                        "url": {
                            "protocol": "https",
                            "path": [
                                "localities",
                                "details"
                            ],
                            "host": [
                                "api",
                                "woosmap",
                                "com"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "public_id",
                                    "value": "<string>",
                                    "description": "(Required) A textual identifier that uniquely identifies a locality, returned from a [Localities Autocomplete](https://developers.woosmap.com/products/localities/autocomplete/).\n"
                                },
                                {
                                    "disabled": true,
                                    "key": "fields",
                                    "value": "<string>",
                                    "description": "Used to limit the returning fields (by default, all fields are return). Available fields are (geometry) (fields should be separated by a ,). By using this parameter you will limit content of responses to the geometry part. No address component will be returned.\n"
                                }
                            ],
                            "variable": []
                        },
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "key"
                                },
                                {
                                    "key": "value",
                                    "value": "<API Key>"
                                },
                                {
                                    "key": "in",
                                    "value": "query"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "0d561d61-b177-4bbf-98c1-ce8a12481712",
                            "name": "200 OK",
                            "originalRequest": {
                                "url": {
                                    "protocol": "https",
                                    "path": [
                                        "localities",
                                        "details"
                                    ],
                                    "host": [
                                        "api",
                                        "woosmap",
                                        "com"
                                    ],
                                    "query": [
                                        {
                                            "key": "public_id",
                                            "value": "MkvnYy6K6oVGqeqfWJGO/6eCgqo="
                                        },
                                        {
                                            "key": "fields",
                                            "value": "geometry"
                                        },
                                        {
                                            "key": "key",
                                            "value": "<API Key>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"result\": {\n  \"formatted_address\": \"House Of Commons, House Of Commons Palace Of Westminster, Parliament Square, London, SW1A 0AA\",\n  \"types\": [\n   \"address\"\n  ],\n  \"public_id\": \"MVZWBfGZQnAQn9JtE9CJZjgeB4Q=\",\n  \"geometry\": {\n   \"location\": {\n    \"lat\": 51.49984,\n    \"lng\": -0.1246375\n   },\n   \"accuracy\": \"ROOFTOP\"\n  },\n  \"address_components\": [\n   {\n    \"types\": [\n     \"country\",\n     \"administrative_area_level_0\"\n    ],\n    \"long_name\": \"United Kingdom\",\n    \"short_name\": \"GB\"\n   },\n   {\n    \"types\": [\n     \"administrative_area_level_1\"\n    ],\n    \"long_name\": \"City of London\",\n    \"short_name\": \"City of London\"\n   },\n   {\n    \"types\": [\n     \"premise\"\n    ],\n    \"long_name\": \"House Of Commons Palace Of Westminster\",\n    \"short_name\": \"House Of Commons Palace Of Westminster\"\n   },\n   {\n    \"types\": [\n     \"locality\"\n    ],\n    \"long_name\": \"London\",\n    \"short_name\": \"London\"\n   },\n   {\n    \"types\": [\n     \"postal_codes\"\n    ],\n    \"long_name\": \"SW1A 0AA\",\n    \"short_name\": \"SW1A 0AA\"\n   },\n   {\n    \"types\": [\n     \"organisation\"\n    ],\n    \"long_name\": \"House Of Commons\",\n    \"short_name\": \"House Of Commons\"\n   },\n   {\n    \"types\": [\n     \"route\"\n    ],\n    \"long_name\": \"Parliament Square\",\n    \"short_name\": \"Parliament Square\"\n   }\n  ]\n }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "22b27505-c7fb-4682-b4df-fee28925d742",
                            "name": "401 UNAUTHORIZED",
                            "originalRequest": {
                                "url": {
                                    "protocol": "https",
                                    "path": [
                                        "localities",
                                        "details"
                                    ],
                                    "host": [
                                        "api",
                                        "woosmap",
                                        "com"
                                    ],
                                    "query": [
                                        {
                                            "key": "public_id",
                                            "value": "MkvnYy6K6oVGqeqfWJGO/6eCgqo="
                                        },
                                        {
                                            "key": "fields",
                                            "value": "geometry"
                                        },
                                        {
                                            "key": "key",
                                            "value": "<API Key>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"detail\": \"Incorrect authentication credentials. Please check or use a valid API Key\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "276ae481-9316-4797-afd6-bb5464fd702f",
            "name": "Address API",
            "description": {
                "content": "Woosmap Address API is a web service that returns addresses and other geographical places in response to an HTTP request. Request is done over HTTPS using GET. Response is formatted as JSON. You must specify a key in your request, included as the value of a `key` parameter for your public key or `private_key` for your private key. This key identifies your application for purposes of quota management. Learn how to [get a key](https://developers.woosmap.com/support/api-keys/).\n",
                "type": "text/plain"
            },
            "item": [
                {
                    "id": "c51b162a-48d3-4751-a9b4-7afa396a128d",
                    "name": "Autocomplete for Addresses",
                    "request": {
                        "name": "Autocomplete for Addresses",
                        "description": {
                            "content": "Autocomplete on worldwide suggestions for a for text-based geographic searches. It can match on full words as well as substrings.\n",
                            "type": "text/plain"
                        },
                        "url": {
                            "protocol": "https",
                            "path": [
                                "address",
                                "autocomplete",
                                "json"
                            ],
                            "host": [
                                "api",
                                "woosmap",
                                "com"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "input",
                                    "value": "<string>",
                                    "description": "(Required) The text string on which to search, for example: \"london\" or \"123 Cross Road\". The Woosmap Address API will return predictions matches based on this string and order the results based on their perceived relevance.\n"
                                },
                                {
                                    "disabled": true,
                                    "key": "components",
                                    "value": "<string>",
                                    "description": "To restrict your results to specific areas. Currently, you can use components to filter over countries. Countries must be passed as three characters string (ISO 3166-1 Alpha 3). Components should be passed as an array of different options which are separated by a `|`.\n"
                                },
                                {
                                    "disabled": true,
                                    "key": "location",
                                    "value": "<string>",
                                    "description": "Bias for the results. Should be pass in `lat`,`lng` format.\n"
                                },
                                {
                                    "disabled": true,
                                    "key": "language",
                                    "value": "<string>",
                                    "description": "The language code, using ISO 639-1 country codes, indicating in which language the results should be returned, if possible. If language is not supplied, the Localities service will use the default language of each country.\n"
                                }
                            ],
                            "variable": []
                        },
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "key"
                                },
                                {
                                    "key": "value",
                                    "value": "<API Key>"
                                },
                                {
                                    "key": "in",
                                    "value": "query"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "6eaef60b-f0fc-4243-adaf-ccef1f19b790",
                            "name": "200 OK",
                            "originalRequest": {
                                "url": {
                                    "protocol": "https",
                                    "path": [
                                        "address",
                                        "autocomplete",
                                        "json"
                                    ],
                                    "host": [
                                        "api",
                                        "woosmap",
                                        "com"
                                    ],
                                    "query": [
                                        {
                                            "key": "input",
                                            "value": "London"
                                        },
                                        {
                                            "key": "components",
                                            "value": "country:CAN|country:BEL"
                                        },
                                        {
                                            "key": "location",
                                            "value": "5.2,-2.3"
                                        },
                                        {
                                            "key": "language",
                                            "value": "en"
                                        },
                                        {
                                            "key": "key",
                                            "value": "<API Key>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"predictions\": [\n  {\n   \"public_id\": \"aGVyZTpjbTpuYW1lZHBsYWNlOjIwMzM3NDU0\",\n   \"description\": \"London, England, United Kingdom\",\n   \"matched_substring\": {\n    \"description\": [\n     {\n      \"offset\": 0,\n      \"length\": 4\n     }\n    ]\n   },\n   \"type\": \"locality\"\n  },\n  {\n   \"public_id\": \"aGVyZTpjbTpuYW1lZHBsYWNlOjIxMDg1NjIw\",\n   \"description\": \"London, ON, Canada\",\n   \"matched_substring\": {\n    \"description\": [\n     {\n      \"offset\": 0,\n      \"length\": 4\n     }\n    ]\n   },\n   \"type\": \"locality\"\n  },\n  {\n   \"public_id\": \"aGVyZTpjbTpuYW1lZHBsYWNlOjIwNDE5Nzgz\",\n   \"description\": \"Londonderry, Northern Ireland, United Kingdom\",\n   \"matched_substring\": {\n    \"description\": [\n     {\n      \"offset\": 0,\n      \"length\": 4\n     }\n    ]\n   },\n   \"type\": \"locality\"\n  },\n  {\n   \"public_id\": \"aGVyZTpjbTpuYW1lZHBsYWNlOjIzMDM1ODQx\",\n   \"description\": \"Londrina, PR, Brazil\",\n   \"matched_substring\": {\n    \"description\": [\n     {\n      \"offset\": 0,\n      \"length\": 4\n     }\n    ]\n   },\n   \"type\": \"locality\"\n  }\n ],\n \"status\": \"OK\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "885a143a-320c-423c-bd40-15f8d0ca730f",
                            "name": "401 UNAUTHORIZED",
                            "originalRequest": {
                                "url": {
                                    "protocol": "https",
                                    "path": [
                                        "address",
                                        "autocomplete",
                                        "json"
                                    ],
                                    "host": [
                                        "api",
                                        "woosmap",
                                        "com"
                                    ],
                                    "query": [
                                        {
                                            "key": "input",
                                            "value": "London"
                                        },
                                        {
                                            "key": "components",
                                            "value": "country:CAN|country:BEL"
                                        },
                                        {
                                            "key": "location",
                                            "value": "5.2,-2.3"
                                        },
                                        {
                                            "key": "language",
                                            "value": "en"
                                        },
                                        {
                                            "key": "key",
                                            "value": "<API Key>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"detail\": \"Incorrect authentication credentials. Please check or use a valid API Key\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "b2bd3cf9-4197-42ee-9976-27f0417bc8f2",
                    "name": "Details of an Address",
                    "request": {
                        "name": "Details of an Address",
                        "description": {
                            "content": "Provides details of an address autocomplete suggestion (using the suggestion’s `public_id`).\n",
                            "type": "text/plain"
                        },
                        "url": {
                            "protocol": "https",
                            "path": [
                                "address",
                                "details",
                                "json"
                            ],
                            "host": [
                                "api",
                                "woosmap",
                                "com"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "public_id",
                                    "value": "<string>",
                                    "description": "(Required) A textual identifier that uniquely identifies a locality, returned from a [Localities Autocomplete](https://developers.woosmap.com/products/localities/autocomplete/).\n"
                                },
                                {
                                    "disabled": true,
                                    "key": "fields",
                                    "value": "<string>",
                                    "description": "Used to limit the returning fields (by default, all fields are return). Available fields are (geometry) (fields should be separated by a `,`). By using this parameter you will limit content of responses to the geometry part. No address component will be returned.\n"
                                }
                            ],
                            "variable": []
                        },
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "key"
                                },
                                {
                                    "key": "value",
                                    "value": "<API Key>"
                                },
                                {
                                    "key": "in",
                                    "value": "query"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "cb3a290f-e41b-463e-a5c1-4ce920246f5e",
                            "name": "200 OK",
                            "originalRequest": {
                                "url": {
                                    "protocol": "https",
                                    "path": [
                                        "address",
                                        "details",
                                        "json"
                                    ],
                                    "host": [
                                        "api",
                                        "woosmap",
                                        "com"
                                    ],
                                    "query": [
                                        {
                                            "key": "public_id",
                                            "value": "aGVyZTpjbTpuYW1lZHBsYWNlOjIwMDA1MTI2"
                                        },
                                        {
                                            "key": "fields",
                                            "value": "geometry"
                                        },
                                        {
                                            "key": "key",
                                            "value": "<API Key>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"result\": {\n  \"formatted_address\": \"London, England, United Kingdom\",\n  \"types\": [\n   \"locality\"\n  ],\n  \"public_id\": \"aGVyZTpjbTpuYW1lZHBsYWNlOjIwMzM3NDU0\",\n  \"address_components\": [\n   {\n    \"types\": [\n     \"country\"\n    ],\n    \"long_name\": \"United Kingdom\",\n    \"short_name\": \"GBR\"\n   },\n   {\n    \"types\": [\n     \"state\"\n    ],\n    \"long_name\": \"England\",\n    \"short_name\": \"England\"\n   },\n   {\n    \"types\": [\n     \"county\"\n    ],\n    \"long_name\": \"London\",\n    \"short_name\": \"LDN\"\n   },\n   {\n    \"long_name\": \"London\",\n    \"short_name\": \"London\",\n    \"types\": [\n     \"locality\"\n    ]\n   },\n   {\n    \"long_name\": \"SW1A 2\",\n    \"short_name\": \"SW1A 2\",\n    \"types\": [\n     \"postal_code\"\n    ]\n   }\n  ],\n  \"geometry\": {\n   \"location_type\": \"GEOMETRIC_CENTER\",\n   \"location\": {\n    \"lat\": 51.50643,\n    \"lng\": -0.12719\n   },\n   \"viewport\": {\n    \"northeast\": {\n     \"lat\": 51.68629,\n     \"lng\": 0.28206\n    },\n    \"southwest\": {\n     \"lat\": 51.28043,\n     \"lng\": -0.56316\n    }\n   }\n  }\n },\n \"status\": \"OK\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "e7762418-45f0-4f7e-a9f7-4b86fe70590e",
                            "name": "401 UNAUTHORIZED",
                            "originalRequest": {
                                "url": {
                                    "protocol": "https",
                                    "path": [
                                        "address",
                                        "details",
                                        "json"
                                    ],
                                    "host": [
                                        "api",
                                        "woosmap",
                                        "com"
                                    ],
                                    "query": [
                                        {
                                            "key": "public_id",
                                            "value": "aGVyZTpjbTpuYW1lZHBsYWNlOjIwMDA1MTI2"
                                        },
                                        {
                                            "key": "fields",
                                            "value": "geometry"
                                        },
                                        {
                                            "key": "key",
                                            "value": "<API Key>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"detail\": \"Incorrect authentication credentials. Please check or use a valid API Key\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "5d480ade-1858-44c6-a890-8ad07a1c805a",
            "name": "Distance API",
            "description": {
                "content": "Woosmap Distance API is a service providing road travel distance and duration calculations, on a Worldwide scale. Request is done over HTTPS using GET or POST. Response is formatted as JSON. You must specify a key in your request, included as the value of a `key` parameter for your public key or `private_key` for your private key. This key identifies your application for purposes of quota management. Learn how to [get a key](https://developers.woosmap.com/support/api-keys/).\n",
                "type": "text/plain"
            },
            "item": [
                {
                    "id": "b58f01bc-df6d-4b5a-8d53-512463ea48c9",
                    "name": "Distance Matrix",
                    "request": {
                        "name": "Distance Matrix",
                        "description": {
                            "content": "Get distances and durations for a matrix of origins and destinations, based on the recommended route between start and end points for a specified travel mode.\n",
                            "type": "text/plain"
                        },
                        "url": {
                            "protocol": "https",
                            "path": [
                                "distance",
                                "distancematrix",
                                "json"
                            ],
                            "host": [
                                "api",
                                "woosmap",
                                "com"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "origins",
                                    "value": "<string>",
                                    "description": "(Required) The starting point for calculating travel distance. You can supply one or more locations separated by the pipe character (|), in the form of latitude/longitude coordinates. They are used unchanged to calculate distance. Ensure that no space exists between the latitude and longitude values. In order to reduce URL size, [encoded polylines](https://developers.google.com/maps/documentation/utilities/polylinealgorithm) are also supported using `enc:encoded-polyline:`\n"
                                },
                                {
                                    "disabled": false,
                                    "key": "destinations",
                                    "value": "<string>",
                                    "description": "(Required) One or more locations to use as the finishing point for calculating travel distance. The options for the destinations parameter are the same as for the origins parameter, described above. In order to reduce URL size, [encoded polylines](https://developers.google.com/maps/documentation/utilities/polylinealgorithm) are also supported using `enc:encoded-polyline:`\n"
                                },
                                {
                                    "disabled": true,
                                    "key": "mode",
                                    "value": "<string>",
                                    "description": "Specifies the mode of transport to use when calculating distance\n"
                                },
                                {
                                    "disabled": true,
                                    "key": "language",
                                    "value": "<string>",
                                    "description": "The language code, indicating in which language the results should be returned, if possible. If language is not supplied, the Distance API service will use the navigator language or “en”.\n"
                                },
                                {
                                    "disabled": true,
                                    "key": "units",
                                    "value": "<string>",
                                    "description": "Specifies the unit system to use when expressing distance as text. Two different units supported:\n* `metric` (default) returns distances in kilometers and meters * `imperial` returns distances in miles and feet\n"
                                },
                                {
                                    "disabled": true,
                                    "key": "elements",
                                    "value": "<string>",
                                    "description": "Specifies element values that will be part of the API response (distance and/or duration). if not specified default is `distance`\n"
                                },
                                {
                                    "disabled": true,
                                    "key": "method",
                                    "value": "<string>",
                                    "description": "Specifies the method to compute the route between the start point and the end point:\n- `time`: fastest route (default) - `distance`: shortest route\n"
                                }
                            ],
                            "variable": []
                        },
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "key"
                                },
                                {
                                    "key": "value",
                                    "value": "<API Key>"
                                },
                                {
                                    "key": "in",
                                    "value": "query"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "95406ace-0d86-4834-8ea1-bc167ddb4fd1",
                            "name": "200 OK",
                            "originalRequest": {
                                "url": {
                                    "protocol": "https",
                                    "path": [
                                        "distance",
                                        "distancematrix",
                                        "json"
                                    ],
                                    "host": [
                                        "api",
                                        "woosmap",
                                        "com"
                                    ],
                                    "query": [
                                        {
                                            "key": "origins",
                                            "value": "48.709,2.403"
                                        },
                                        {
                                            "key": "destinations",
                                            "value": "48.709,2.403|48.768,2.338"
                                        },
                                        {
                                            "key": "mode",
                                            "value": "driving"
                                        },
                                        {
                                            "key": "language",
                                            "value": "en"
                                        },
                                        {
                                            "key": "units",
                                            "value": "metric"
                                        },
                                        {
                                            "key": "elements",
                                            "value": "duration_distance"
                                        },
                                        {
                                            "key": "method",
                                            "value": "distance"
                                        },
                                        {
                                            "key": "key",
                                            "value": "<API Key>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"status\": \"OK\",\n \"rows\": [\n  {\n   \"elements\": [\n    {\n     \"status\": \"OK\",\n     \"duration\": {\n      \"value\": 20495,\n      \"text\": \"5 hours 42 mins\"\n     },\n     \"distance\": {\n      \"value\": 544752,\n      \"text\": \"545 km\"\n     }\n    },\n    {\n     \"status\": \"OK\",\n     \"duration\": {\n      \"value\": 1668,\n      \"text\": \"28 mins\"\n     },\n     \"distance\": {\n      \"value\": 24089,\n      \"text\": \"24.1 km\"\n     }\n    }\n   ]\n  },\n  {\n   \"elements\": [\n    {\n     \"status\": \"OK\",\n     \"duration\": {\n      \"value\": 16864,\n      \"text\": \"4 hours 41 mins\"\n     },\n     \"distance\": {\n      \"value\": 448056,\n      \"text\": \"448 km\"\n     }\n    },\n    {\n     \"status\": \"OK\",\n     \"duration\": {\n      \"value\": 27568,\n      \"text\": \"7 hours 39 mins\"\n     },\n     \"distance\": {\n      \"value\": 742188,\n      \"text\": \"742 km\"\n     }\n    }\n   ]\n  }\n ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "1cbc96a8-a369-442b-8c26-8b0ba968eb2d",
                            "name": "401 UNAUTHORIZED",
                            "originalRequest": {
                                "url": {
                                    "protocol": "https",
                                    "path": [
                                        "distance",
                                        "distancematrix",
                                        "json"
                                    ],
                                    "host": [
                                        "api",
                                        "woosmap",
                                        "com"
                                    ],
                                    "query": [
                                        {
                                            "key": "origins",
                                            "value": "48.709,2.403"
                                        },
                                        {
                                            "key": "destinations",
                                            "value": "48.709,2.403|48.768,2.338"
                                        },
                                        {
                                            "key": "mode",
                                            "value": "driving"
                                        },
                                        {
                                            "key": "language",
                                            "value": "en"
                                        },
                                        {
                                            "key": "units",
                                            "value": "metric"
                                        },
                                        {
                                            "key": "elements",
                                            "value": "duration_distance"
                                        },
                                        {
                                            "key": "method",
                                            "value": "distance"
                                        },
                                        {
                                            "key": "key",
                                            "value": "<API Key>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"detail\": \"Incorrect authentication credentials. Please check or use a valid API Key\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "1e123e63-a29c-4275-80ee-3fdd3a6950b6",
                    "name": "Get Distance Matrix using POST",
                    "request": {
                        "name": "Get Distance Matrix using POST",
                        "description": {
                            "content": "Get distances and durations for a matrix of origins and destinations, based on the recommended route between start and end points for a specified travel mode. If the URL size is too short for your origins and destinations, you should request the server using this POST method and passing arguments as json.\n",
                            "type": "text/plain"
                        },
                        "url": {
                            "protocol": "https",
                            "path": [
                                "distance",
                                "distancematrix",
                                "json"
                            ],
                            "host": [
                                "api",
                                "woosmap",
                                "com"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "key"
                                },
                                {
                                    "key": "value",
                                    "value": "<API Key>"
                                },
                                {
                                    "key": "in",
                                    "value": "query"
                                }
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"origins\": \"<string>\",\n    \"destinations\": \"<string>\",\n    \"mode\": \"<string>\",\n    \"language\": \"<string>\",\n    \"units\": \"<string>\",\n    \"elements\": \"<string>\",\n    \"method\": \"<string>\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "921ae8c8-fa77-4cfc-884a-de2fba04e31c",
                            "name": "200 OK",
                            "originalRequest": {
                                "url": {
                                    "protocol": "https",
                                    "path": [
                                        "distance",
                                        "distancematrix",
                                        "json"
                                    ],
                                    "host": [
                                        "api",
                                        "woosmap",
                                        "com"
                                    ],
                                    "query": [
                                        {
                                            "key": "key",
                                            "value": "<API Key>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"origins\": \"48.73534,2.368308|48.73534,2.368308\",\n    \"destinations\": \"48.83534,2.368308\",\n    \"units\": \"imperial\",\n    \"elements\": \"duration_distance\",\n    \"method\": \"distance\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"status\": \"OK\",\n \"rows\": [\n  {\n   \"elements\": [\n    {\n     \"status\": \"OK\",\n     \"duration\": {\n      \"value\": 20495,\n      \"text\": \"5 hours 42 mins\"\n     },\n     \"distance\": {\n      \"value\": 544752,\n      \"text\": \"545 km\"\n     }\n    },\n    {\n     \"status\": \"OK\",\n     \"duration\": {\n      \"value\": 1668,\n      \"text\": \"28 mins\"\n     },\n     \"distance\": {\n      \"value\": 24089,\n      \"text\": \"24.1 km\"\n     }\n    }\n   ]\n  },\n  {\n   \"elements\": [\n    {\n     \"status\": \"OK\",\n     \"duration\": {\n      \"value\": 16864,\n      \"text\": \"4 hours 41 mins\"\n     },\n     \"distance\": {\n      \"value\": 448056,\n      \"text\": \"448 km\"\n     }\n    },\n    {\n     \"status\": \"OK\",\n     \"duration\": {\n      \"value\": 27568,\n      \"text\": \"7 hours 39 mins\"\n     },\n     \"distance\": {\n      \"value\": 742188,\n      \"text\": \"742 km\"\n     }\n    }\n   ]\n  }\n ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "08168a34-0df9-47cf-a0c2-077364b32e48",
                            "name": "401 UNAUTHORIZED",
                            "originalRequest": {
                                "url": {
                                    "protocol": "https",
                                    "path": [
                                        "distance",
                                        "distancematrix",
                                        "json"
                                    ],
                                    "host": [
                                        "api",
                                        "woosmap",
                                        "com"
                                    ],
                                    "query": [
                                        {
                                            "key": "key",
                                            "value": "<API Key>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"origins\": \"48.73534,2.368308|48.73534,2.368308\",\n    \"destinations\": \"48.83534,2.368308\",\n    \"units\": \"imperial\",\n    \"elements\": \"duration_distance\",\n    \"method\": \"distance\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"detail\": \"Incorrect authentication credentials. Please check or use a valid API Key\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "2be77796-6394-4036-99ca-a641cb1b497c",
                    "name": "Get Route",
                    "request": {
                        "name": "Get Route",
                        "description": {
                            "content": "Get distance, duration and path (as a polyline) for a pair of origin and destination, based on the recommended route between those two points for a specified travel mode.\n",
                            "type": "text/plain"
                        },
                        "url": {
                            "protocol": "https",
                            "path": [
                                "distance",
                                "route",
                                "json"
                            ],
                            "host": [
                                "api",
                                "woosmap",
                                "com"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "origins",
                                    "value": "<string>",
                                    "description": "(Required) The starting point for calculating travel distance. You can supply one or more locations separated by the pipe character (|), in the form of latitude/longitude coordinates. They are used unchanged to calculate distance. Ensure that no space exists between the latitude and longitude values. In order to reduce URL size, [encoded polylines](https://developers.google.com/maps/documentation/utilities/polylinealgorithm) are also supported using `enc:encoded-polyline:`\n"
                                },
                                {
                                    "disabled": false,
                                    "key": "destinations",
                                    "value": "<string>",
                                    "description": "(Required) One or more locations to use as the finishing point for calculating travel distance. The options for the destinations parameter are the same as for the origins parameter, described above. In order to reduce URL size, [encoded polylines](https://developers.google.com/maps/documentation/utilities/polylinealgorithm) are also supported using `enc:encoded-polyline:`\n"
                                },
                                {
                                    "disabled": true,
                                    "key": "mode",
                                    "value": "<string>",
                                    "description": "Specifies the mode of transport to use when calculating distance\n"
                                },
                                {
                                    "disabled": true,
                                    "key": "language",
                                    "value": "<string>",
                                    "description": "The language code, indicating in which language the results should be returned, if possible. If language is not supplied, the Distance API service will use the navigator language or “en”.\n"
                                },
                                {
                                    "disabled": true,
                                    "key": "units",
                                    "value": "<string>",
                                    "description": "Specifies the unit system to use when expressing distance as text. Two different units supported:\n* `metric` (default) returns distances in kilometers and meters * `imperial` returns distances in miles and feet\n"
                                },
                                {
                                    "disabled": true,
                                    "key": "alternatives",
                                    "value": "<boolean>",
                                    "description": "Specifies if alternative routes should be returned. default is `false`. Depending on the calculated route, alternatives may not be provided.\n`alternatives` and `waypoints` can not be used at the same time.\n"
                                },
                                {
                                    "disabled": true,
                                    "key": "waypoints",
                                    "value": "<string>",
                                    "description": "A list of points by which the route should pass. route response is divided into legs, one leg corresponding to a route between two waypoints. Waypoints should be separated by `|` character.\n`alternatives` and `waypoints` can not be used at the same time.\n"
                                },
                                {
                                    "disabled": true,
                                    "key": "method",
                                    "value": "<string>",
                                    "description": "Specifies the method to compute the route between the start point and the end point:\n- `time`: fastest route (default) - `distance`: shortest route\n"
                                }
                            ],
                            "variable": []
                        },
                        "method": "GET",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "key"
                                },
                                {
                                    "key": "value",
                                    "value": "<API Key>"
                                },
                                {
                                    "key": "in",
                                    "value": "query"
                                }
                            ]
                        }
                    },
                    "response": [
                        {
                            "id": "8222ca2f-213c-4559-8333-ec912dec7a91",
                            "name": "200 OK",
                            "originalRequest": {
                                "url": {
                                    "protocol": "https",
                                    "path": [
                                        "distance",
                                        "route",
                                        "json"
                                    ],
                                    "host": [
                                        "api",
                                        "woosmap",
                                        "com"
                                    ],
                                    "query": [
                                        {
                                            "key": "origins",
                                            "value": "48.709,2.403"
                                        },
                                        {
                                            "key": "destinations",
                                            "value": "48.709,2.403|48.768,2.338"
                                        },
                                        {
                                            "key": "mode",
                                            "value": "driving"
                                        },
                                        {
                                            "key": "language",
                                            "value": "en"
                                        },
                                        {
                                            "key": "units",
                                            "value": "metric"
                                        },
                                        {
                                            "key": "alternatives",
                                            "value": "true"
                                        },
                                        {
                                            "key": "waypoints",
                                            "value": "48.850077,3.311124|48.850077,3.411124"
                                        },
                                        {
                                            "key": "method",
                                            "value": "distance"
                                        },
                                        {
                                            "key": "key",
                                            "value": "<API Key>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"status\": \"OK\",\n \"routes\": [\n  {\n   \"overview_polyline\": {\n    \"points\": \"gce_I|mbHR_@Rg@Pg@Nm@Ns@Hk@Fk@PyBTaCXmCZcCd@qCLw@ViA\\\\}ADQ@K@O?S?[AUGUC[AW@WB[DUJ[Va@RMn@c@TKXGPANAN@t@NZD~AV`AL`ANTBfBV`@F|ATjFr@vEr@D@`@DF?`@BD?V@lEXx@Dv@D^B`@Db@BP@n@BJ@j@Bb@D\\\\BzAHFaDB}ABqA@}A@kA?k@?a@Ae@Ac@Ek@Ge@Km@Oo@Qm@Ok@Uk@Sg@Ui@[i@]g@]g@WYSUe@a@s@e@m@e@WYO[`@kCtAoKl@uFH}@Ls@r@yE`AyFBO\"\n   },\n   \"bounds\": {\n    \"northeast\": {\n     \"lat\": 52.4602,\n     \"lng\": -1.47218\n    },\n    \"southwest\": {\n     \"lat\": 52.44837,\n     \"lng\": -1.49231\n    }\n   },\n   \"summary\": \"\",\n   \"legs\": [\n    {\n     \"distance\": {\n      \"text\": \"2.8 km\",\n      \"value\": 2775.1\n     },\n     \"duration\": {\n      \"text\": \"5 mins\",\n      \"value\": 272.5\n     },\n     \"start_location\": {\n      \"lat\": 52.460198,\n      \"lng\": -1.492308\n     },\n     \"end_location\": {\n      \"lat\": 52.449069,\n      \"lng\": -1.472178\n     }\n    }\n   ]\n  }\n ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "ebe85435-a119-4a48-8128-e911024a8b43",
                            "name": "401 UNAUTHORIZED",
                            "originalRequest": {
                                "url": {
                                    "protocol": "https",
                                    "path": [
                                        "distance",
                                        "route",
                                        "json"
                                    ],
                                    "host": [
                                        "api",
                                        "woosmap",
                                        "com"
                                    ],
                                    "query": [
                                        {
                                            "key": "origins",
                                            "value": "48.709,2.403"
                                        },
                                        {
                                            "key": "destinations",
                                            "value": "48.709,2.403|48.768,2.338"
                                        },
                                        {
                                            "key": "mode",
                                            "value": "driving"
                                        },
                                        {
                                            "key": "language",
                                            "value": "en"
                                        },
                                        {
                                            "key": "units",
                                            "value": "metric"
                                        },
                                        {
                                            "key": "alternatives",
                                            "value": "true"
                                        },
                                        {
                                            "key": "waypoints",
                                            "value": "48.850077,3.311124|48.850077,3.411124"
                                        },
                                        {
                                            "key": "method",
                                            "value": "distance"
                                        },
                                        {
                                            "key": "key",
                                            "value": "<API Key>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"detail\": \"Incorrect authentication credentials. Please check or use a valid API Key\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "95222c60-259d-423b-85ed-62501eb77211",
            "name": "Merchant API",
            "description": {
                "content": "Woosmap Merchant API is a REST API aiming at cleaning “dirty” merchant names on transactions provided by a payment provider. It can be used to enrich end users’ transactions list by replacing hardly understandable labels with a commonly known merchant name along with their logo. Additionally, the API can provide a Google Maps Place ID. Request is done over HTTPS using GET or POST. Response is formatted as JSON. You must specify a key in your request, included as the value of a `private_key` parameter for your private key. This key identifies your application for purposes of quota management. Learn how to [get a key](https://developers.woosmap.com/support/api-keys/).\n",
                "type": "text/plain"
            },
            "item": [
                {
                    "id": "25435911-a4fc-4378-baaf-2ba89fbc86b2",
                    "name": "Get Merchant Clean Names",
                    "request": {
                        "name": "Get Merchant Clean Names",
                        "description": {
                            "content": "Retrieve clean names and logos in response to a dirty transactions POST.\n",
                            "type": "text/plain"
                        },
                        "url": {
                            "protocol": "https",
                            "path": [
                                "merchant",
                                "brands"
                            ],
                            "host": [
                                "api",
                                "woosmap",
                                "com"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "private_key"
                                },
                                {
                                    "key": "value",
                                    "value": "<API Key>"
                                },
                                {
                                    "key": "in",
                                    "value": "query"
                                }
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"merchants\": [\n        {\n            \"dirty_name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"country\": \"<string>\",\n            \"custom_id\": \"<string>\"\n        },\n        {\n            \"dirty_name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"country\": \"<string>\",\n            \"custom_id\": \"<string>\"\n        }\n    ]\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "b7d84716-4665-45d2-8bd9-92789632a066",
                            "name": "200 OK",
                            "originalRequest": {
                                "url": {
                                    "protocol": "https",
                                    "path": [
                                        "merchant",
                                        "brands"
                                    ],
                                    "host": [
                                        "api",
                                        "woosmap",
                                        "com"
                                    ],
                                    "query": [
                                        {
                                            "key": "private_key",
                                            "value": "<API Key>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"merchants\": [\n        {\n            \"dirty_name\": \"MCDO UK 2231 EP\",\n            \"country\": \"GB\"\n        },\n        {\n            \"dirty_name\": \"Zara Fashion Retail, S.A.\",\n            \"country\": \"IT\"\n        },\n        {\n            \"dirty_name\": \"APOLLO PHARMACY BANGALORE IN\",\n            \"country\": \"IN\"\n        },\n        {\n            \"dirty_name\": \"PIZZA HUT - SHOP 157\"\n        },\n        {\n            \"dirty_name\": \"CARREFOUR CITY 3112846\",\n            \"country\": \"FR\"\n        },\n        {\n            \"dirty_name\": \"ITUNES.COM/BILL\",\n            \"country\": \"IE\"\n        },\n        {\n            \"dirty_name\": \"Pepa SL Gracia\",\n            \"country\": \"ES\"\n        }\n    ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"merchants\": [\n  {\n   \"dirty_name\": \"MCDO UK 2231 EP\",\n   \"clean_name\": \"McDonald's\",\n   \"status\": \"OK\",\n   \"logo\": \"956bcb3591a8976ff94871a59b09eecc\",\n   \"logo_url\": \"https://api.woosmap.com/merchants/logos/956bcb3591a8976ff94871a59b09eecc.png\",\n   \"country\": \"GB\",\n   \"merchant_id\": \"234482729011\"\n  },\n  {\n   \"dirty_name\": \"Zara Fashion Retail, S.A.\",\n   \"clean_name\": \"Zara\",\n   \"status\": \"OK\",\n   \"logo\": \"72fc39033e0d9e923a0236cb874c9309\",\n   \"logo_url\": \"https://api.woosmap.com/merchants/logos/72fc39033e0d9e923a0236cb874c9309.png\",\n   \"country\": \"IT\",\n   \"merchant_id\": \"*44532UY2T33219\"\n  },\n  {\n   \"dirty_name\": \"APOLLO PHARMACY BANGALORE IN\",\n   \"clean_name\": \"Apollo Pharmacy\",\n   \"status\": \"OK\",\n   \"logo\": \"c776d3336e0d8c2b9e893e9e92b2caf7\",\n   \"logo_url\": \"https://api.woosmap.com/merchants/logos/c776d3336e0d8c2b9e893e9e92b2caf7.png\",\n   \"country\": \"IN\"\n  },\n  {\n   \"dirty_name\": \"PIZZA HUT - SHOP 157\",\n   \"clean_name\": \"Pizza Hut\",\n   \"status\": \"OK\",\n   \"logo\": \"d5463410f32a5f497459ac79552d3ce3\",\n   \"logo_url\": \"https://api.woosmap.com/merchants/logos/d5463410f32a5f497459ac79552d3ce3.png\",\n   \"country\": \"\"\n  },\n  {\n   \"dirty_name\": \"CARREFOUR CITY 3112846\",\n   \"clean_name\": \"Carrefour City\",\n   \"status\": \"OK\",\n   \"logo\": \"08ee8a3cecbcd3b7d9103bcf0e04db7e\",\n   \"logo_url\": \"https://api.woosmap.com/merchants/logos/08ee8a3cecbcd3b7d9103bcf0e04db7e.png\",\n   \"country\": \"FR\",\n   \"merchant_id\": \"9651781125\"\n  },\n  {\n   \"dirty_name\": \"ITUNES.COM/BILL\",\n   \"clean_name\": \"Apple\",\n   \"status\": \"OK\",\n   \"logo\": \"5eb75a5239b76287f44021f8e6e1bd41\",\n   \"logo_url\": \"https://api.woosmap.com/merchants/logos/5eb75a5239b76287f44021f8e6e1bd41.png\",\n   \"country\": \"IE\",\n   \"merchant_id\": \"2070070200925\"\n  },\n  {\n   \"dirty_name\": \"Pepa SL Gracia\",\n   \"clean_name\": \"\",\n   \"status\": \"OK\",\n   \"logo\": \"\",\n   \"logo_url\": \"\",\n   \"country\": \"ES\",\n   \"merchant_id\": \"34J21189\"\n  }\n ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "1282de2d-d428-43bb-b9d9-5d2e70f877e9",
                            "name": "401 UNAUTHORIZED",
                            "originalRequest": {
                                "url": {
                                    "protocol": "https",
                                    "path": [
                                        "merchant",
                                        "brands"
                                    ],
                                    "host": [
                                        "api",
                                        "woosmap",
                                        "com"
                                    ],
                                    "query": [
                                        {
                                            "key": "private_key",
                                            "value": "<API Key>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"merchants\": [\n        {\n            \"dirty_name\": \"MCDO UK 2231 EP\",\n            \"country\": \"GB\"\n        },\n        {\n            \"dirty_name\": \"Zara Fashion Retail, S.A.\",\n            \"country\": \"IT\"\n        },\n        {\n            \"dirty_name\": \"APOLLO PHARMACY BANGALORE IN\",\n            \"country\": \"IN\"\n        },\n        {\n            \"dirty_name\": \"PIZZA HUT - SHOP 157\"\n        },\n        {\n            \"dirty_name\": \"CARREFOUR CITY 3112846\",\n            \"country\": \"FR\"\n        },\n        {\n            \"dirty_name\": \"ITUNES.COM/BILL\",\n            \"country\": \"IE\"\n        },\n        {\n            \"dirty_name\": \"Pepa SL Gracia\",\n            \"country\": \"ES\"\n        }\n    ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"detail\": \"Incorrect authentication credentials. Please check or use a valid API Key\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "20d660a2-1e22-4a2a-b894-f80a1aac0103",
                    "name": "Get Merchant Place",
                    "request": {
                        "name": "Get Merchant Place",
                        "description": {
                            "content": "Retrieve clean names, logos and Google Place ID of given dirty merchants name.\n",
                            "type": "text/plain"
                        },
                        "url": {
                            "protocol": "https",
                            "path": [
                                "merchant",
                                "place"
                            ],
                            "host": [
                                "api",
                                "woosmap",
                                "com"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "auth": {
                            "type": "apikey",
                            "apikey": [
                                {
                                    "key": "key",
                                    "value": "private_key"
                                },
                                {
                                    "key": "value",
                                    "value": "<API Key>"
                                },
                                {
                                    "key": "in",
                                    "value": "query"
                                }
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"merchants\": [\n        {\n            \"dirty_name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"country\": \"<string>\",\n            \"custom_id\": \"<string>\",\n            \"street\": \"<string>\",\n            \"zipcode\": \"<string>\",\n            \"city\": \"<string>\",\n            \"state\": \"<string>\",\n            \"position\": \"<string>\"\n        },\n        {\n            \"dirty_name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"country\": \"<string>\",\n            \"custom_id\": \"<string>\",\n            \"street\": \"<string>\",\n            \"zipcode\": \"<string>\",\n            \"city\": \"<string>\",\n            \"state\": \"<string>\",\n            \"position\": \"<string>\"\n        }\n    ]\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "1fec8360-0664-4b3f-bdd2-42be23a6c2ab",
                            "name": "200 OK",
                            "originalRequest": {
                                "url": {
                                    "protocol": "https",
                                    "path": [
                                        "merchant",
                                        "place"
                                    ],
                                    "host": [
                                        "api",
                                        "woosmap",
                                        "com"
                                    ],
                                    "query": [
                                        {
                                            "key": "private_key",
                                            "value": "<API Key>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"merchants\": [\n        {\n            \"dirty_name\": \"MCDO UK 2231 EP\",\n            \"country\": \"GB\"\n        },\n        {\n            \"dirty_name\": \"Zara Fashion Retail, S.A.\",\n            \"country\": \"IT\"\n        },\n        {\n            \"dirty_name\": \"APOLLO PHARMACY BANGALORE IN\",\n            \"country\": \"IN\"\n        },\n        {\n            \"dirty_name\": \"PIZZA HUT - SHOP 157\"\n        },\n        {\n            \"dirty_name\": \"CARREFOUR CITY 3112846\",\n            \"country\": \"FR\"\n        },\n        {\n            \"dirty_name\": \"ITUNES.COM/BILL\",\n            \"country\": \"IE\"\n        },\n        {\n            \"dirty_name\": \"Pepa SL Gracia\",\n            \"country\": \"ES\"\n        }\n    ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"merchants\": [\n  {\n   \"dirty_name\": \"MCDO UK 2231 EP\",\n   \"clean_name\": \"McDonald's\",\n   \"status\": \"OK\",\n   \"logo\": \"956bcb3591a8976ff94871a59b09eecc\",\n   \"logo_url\": \"https://api.woosmap.com/merchants/logos/956bcb3591a8976ff94871a59b09eecc.png\",\n   \"country\": \"GB\",\n   \"merchant_id\": \"234482729011\"\n  },\n  {\n   \"dirty_name\": \"Zara Fashion Retail, S.A.\",\n   \"clean_name\": \"Zara\",\n   \"status\": \"OK\",\n   \"logo\": \"72fc39033e0d9e923a0236cb874c9309\",\n   \"logo_url\": \"https://api.woosmap.com/merchants/logos/72fc39033e0d9e923a0236cb874c9309.png\",\n   \"country\": \"IT\",\n   \"merchant_id\": \"*44532UY2T33219\"\n  },\n  {\n   \"dirty_name\": \"APOLLO PHARMACY BANGALORE IN\",\n   \"clean_name\": \"Apollo Pharmacy\",\n   \"status\": \"OK\",\n   \"logo\": \"c776d3336e0d8c2b9e893e9e92b2caf7\",\n   \"logo_url\": \"https://api.woosmap.com/merchants/logos/c776d3336e0d8c2b9e893e9e92b2caf7.png\",\n   \"country\": \"IN\"\n  },\n  {\n   \"dirty_name\": \"PIZZA HUT - SHOP 157\",\n   \"clean_name\": \"Pizza Hut\",\n   \"status\": \"OK\",\n   \"logo\": \"d5463410f32a5f497459ac79552d3ce3\",\n   \"logo_url\": \"https://api.woosmap.com/merchants/logos/d5463410f32a5f497459ac79552d3ce3.png\",\n   \"country\": \"\"\n  },\n  {\n   \"dirty_name\": \"CARREFOUR CITY 3112846\",\n   \"clean_name\": \"Carrefour City\",\n   \"status\": \"OK\",\n   \"logo\": \"08ee8a3cecbcd3b7d9103bcf0e04db7e\",\n   \"logo_url\": \"https://api.woosmap.com/merchants/logos/08ee8a3cecbcd3b7d9103bcf0e04db7e.png\",\n   \"country\": \"FR\",\n   \"merchant_id\": \"9651781125\"\n  },\n  {\n   \"dirty_name\": \"ITUNES.COM/BILL\",\n   \"clean_name\": \"Apple\",\n   \"status\": \"OK\",\n   \"logo\": \"5eb75a5239b76287f44021f8e6e1bd41\",\n   \"logo_url\": \"https://api.woosmap.com/merchants/logos/5eb75a5239b76287f44021f8e6e1bd41.png\",\n   \"country\": \"IE\",\n   \"merchant_id\": \"2070070200925\"\n  },\n  {\n   \"dirty_name\": \"Pepa SL Gracia\",\n   \"clean_name\": \"\",\n   \"status\": \"OK\",\n   \"logo\": \"\",\n   \"logo_url\": \"\",\n   \"country\": \"ES\",\n   \"merchant_id\": \"34J21189\"\n  }\n ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "55aaf9a5-bb80-45f7-a2f4-085f11944c68",
                            "name": "401 UNAUTHORIZED",
                            "originalRequest": {
                                "url": {
                                    "protocol": "https",
                                    "path": [
                                        "merchant",
                                        "place"
                                    ],
                                    "host": [
                                        "api",
                                        "woosmap",
                                        "com"
                                    ],
                                    "query": [
                                        {
                                            "key": "private_key",
                                            "value": "<API Key>"
                                        }
                                    ],
                                    "variable": []
                                },
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n    \"merchants\": [\n        {\n            \"dirty_name\": \"MCDO UK 2231 EP\",\n            \"country\": \"GB\"\n        },\n        {\n            \"dirty_name\": \"Zara Fashion Retail, S.A.\",\n            \"country\": \"IT\"\n        },\n        {\n            \"dirty_name\": \"APOLLO PHARMACY BANGALORE IN\",\n            \"country\": \"IN\"\n        },\n        {\n            \"dirty_name\": \"PIZZA HUT - SHOP 157\"\n        },\n        {\n            \"dirty_name\": \"CARREFOUR CITY 3112846\",\n            \"country\": \"FR\"\n        },\n        {\n            \"dirty_name\": \"ITUNES.COM/BILL\",\n            \"country\": \"IE\"\n        },\n        {\n            \"dirty_name\": \"Pepa SL Gracia\",\n            \"country\": \"ES\"\n        }\n    ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n \"detail\": \"Incorrect authentication credentials. Please check or use a valid API Key\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        }
    ],
    "event": [],
    "variable": [
        {
            "type": "string",
            "value": "https://api.woosmap.com",
            "key": "baseUrl"
        }
    ],
    "auth": {
        "type": "apikey",
        "apikey": [
            {
                "key": "key",
                "value": "key"
            },
            {
                "key": "value",
                "value": "<API Key>"
            },
            {
                "key": "in",
                "value": "query"
            }
        ]
    },
    "info": {
        "_postman_id": "8da3ccda-e601-4dfa-a67a-ed096cbf8adb",
        "name": "Woosmap",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
        "description": {
            "content": "API Specification for Woosmap",
            "type": "text/plain"
        }
    }
}